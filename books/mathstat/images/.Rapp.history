matplot(dat[dat$time>0, "time"], dat[dat$time>0, c("S", "L", "E", "I", "Q", "H", "R", "D")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(8, palette="viridis"), "black"))
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 2, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(8, palette="viridis"), "black"))
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(8, palette="viridis"), "black"))
?hcl.colors
hcl.pals
hcl.pals()
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(2, 2))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[1]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[2]))#
plot(dat[dat$time>0, "time"], dat[dat$time>0, "H"], 1, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[3]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[4]))#
plot(dat[dat$time>0, "time"], dat[dat$time>0, "D"], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"))
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(2, 2))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[1]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[2]))#
plot(dat[dat$time>0, "time"], dat[dat$time>0, "H"], 1, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[3]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[4]))#
plot(dat[dat$time>0, "time"], dat[dat$time>0, "D"], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"))
dat[dat$time>0, "H"]
plot(dat[dat$time>0, "time"], dat[dat$time>0, "D"], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"))
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[4]))
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[2]))
time
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[1]))
plot(dat[dat$time>0, "time"], dat[dat$time>0, "H"], 1, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[3]))
plot(dat[dat$time>0, "time"], dat[dat$time>0, "H"], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="Lisbon")[3]))
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(2, 2))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[1]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[2]))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[3]))#
#
plot(dat[dat$time>0, "time"], dat[dat$time>0, c("H", "D")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[4], "black"))
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(2, 2))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[1]))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[2]))#
#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[3]))#
#
matplot(dat[dat$time>0, "time"], dat[dat$time>0, c("H", "D")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[4], "black"))
set.seed(101)#
parms <- c(sd = 0.9, sr = 0.01, betas = 0.01, betal = 0.0001, lambda = 1/3, deltai = 0.05,#
			q = 0.1, h = 0.5, deltaq = 0.05, deltah = 0.25, recq=0.1, rech=0.3)#
#
# parms <- parms2#
#
sols <- list(NULL)#
xstart <- c(S = 1e5, L = 0.0, E = 0.0, I=10, R=0, Q=0, H=0, D=0)#
#
trans <- NULL#
# rownames(trans) <- c("S", "L", "E", "I", "R", "Q", "H", "D")#
#
trans <- cbind(trans, StoL = c(-1, 1, 0, 0, 0, 0, 0, 0))#
trans <- as.data.frame(trans)#
#
rownames(trans) <- c("S", "L", "E", "I", "Q", "H", "R", "D")#
trans <- cbind(trans, LtoS = c(+1, -1, 0, 0, 0, 0, 0, 0))#
trans <- cbind(trans, StoE = c(-1, 0, +1, 0, 0, 0, 0, 0))#
trans <- cbind(trans, LtoE = c(0, -1, +1, 0, 0, 0, 0, 0))#
trans <- cbind(trans, EtoI = c(0, 0, -1, +1, 0, 0, 0, 0))#
trans <- cbind(trans, Ideath = c(0, 0, 0, -1, 0, 0, 0, +1))#
trans <- cbind(trans, ItoQ = c(0, 0, 0, -1, +1, 0, 0, 0))#
trans <- cbind(trans, ItoH = c(0, 0, 0, -1, 0, +1, 0, 0))#
trans <- cbind(trans, Qdeath = c(0, 0, 0, 0, -1, 0, 0, +1))#
trans <- cbind(trans, Hdeath = c(0, 0, 0, 0, 0, -1, 0, +1))#
trans <- cbind(trans, QtoR = c(0, 0, 0, 0, -1, 0, +1, 0))#
trans <- cbind(trans, HtoR = c(0, 0, 0, 0, 0, -1, +1, 0))#
#trans <- cbind(trans, RtoS = c(+1, 0, 0, -1, 0, 0, 0))#
#trans <- cbind(trans, NtoS = c(+1, 0, 0, 0, -1, 0, 0))#
trans#
#
## if we're lucky this should run your model with almost no modification#
for(num in 1:10){#
X <- c(1e5, 0, 0, 10, 0, 0, 0, 0)#
Xsol <- matrix(0, nrow=8e5, ncol=8)#
Xsol[1, ] <- t(X)#
tsol <- rep(0, nrow(Xsol)) #pre allocated memory to solve our slowness problem by making these matrix/vector combos#
t <- 0#
for(i in 2:(nrow(Xsol)-1)){#
if(sum(Xsol[i-1, 1:6]) > 0){#
	(rn <- runif(2, 0, 1))#
#	 StoL LtoS StoE LtoE EtoI Ideath ItoQ ItoH ItoD Qdeath Hdeath QtoR HtoR#
# S   -1    1   -1    0    0      0    0    0    0      0      0    0    0#
# L    1   -1    0   -1    0      0    0    0    0      0      0    0    0#
# E    0    0    1    1   -1      0    0    0    0      0      0    0    0#
# I    0    0    0    0    1     -1   -1   -1   -1      0      0    0    0#
# Q    0    0    0    0    0      0    1    0    0     -1      0   -1    0#
# H    0    0    0    0    0      0    0    1    0      0     -1    0   -1#
# R    0    0    0    0    0      0    0    0    0      0      0    1    1#
# D    0    0    0    0    0      1    0    0    1      1      1    0    0#
#
	rate <- with(as.list(parms), {c(#
		sd*X[1],#
		sr*X[2], #
		betas*X[1]*X[4],#
		betal*X[2]*X[4],#
		lambda*X[3],#
		deltai*X[4], #
		q*X[4], #
		h*X[4], #
		deltaq*X[5], #
		deltah*X[6],#
		recq*X[5],#
		rech*X[6]#
		)})#
	(prop <- cumsum(rate)/sum(rate))#
	(rxn <- min(which(rn[1] < prop)))#
#
	## increment X#
	(X <- X + as.matrix(trans[, rxn], 1, 8))#
	# if(min(X)==-1)break## before something goes negative, things can be zero, but not negative#
	## store Xs#
#
	(Xsol[i, ] <- t(X)) ## other ways to do this#
	## increment t#
	t <- t + -log(rn[2])/sum(rate)#
	## store t#
	tsol[i] <- t#
	#if(i/100000==floor(i/100000))print(i)#
}else{#
print("stop")#
next;#
}#
}#
#
  dat <- cbind(tsol, Xsol)#
  dat <- as.data.frame(dat)#
  names(dat) <- c("time", "S", "L", "E", "I", "Q", "H", "R", "D")#
  head(dat)#
  ## we'll eventually turn this into a function that eats parameters and intial conditions and returns a result so that our applications will be cleaner to look at#
sols[[num]] <- dat#
}#
	files <- T#
#
for(num in 1:10){#
	dat <- sols[[num]]#
if(files)pdf(paste("cor_stoch",num,".pdf",sep=''), height=5, width=5)#
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
matplot(dat[dat$time>0, "time"], dat[dat$time>0, c("S", "L", "E", "I", "Q", "H", "R", "D")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(8, palette="viridis"), "black"))#
#
legend("top", c("S", "L", "E", "I", "Q", "H", "R", "D"), col=c(hcl.colors(8, palette="viridis"), "black"), lty=1, lwd=2, bty='n', ncol=2)#
mtext("Population densities (number/area)", 2, line=2.75, cex=1.5, font=2) # y axis#
mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
if(files)dev.off()#
#
if(files)pdf(paste("cor_stoch_totals",num,".pdf",sep=''), height=5, width=5)#
par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(2, 2))#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("S", "L")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[1]), main="healthy")#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("E", "I")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[2]), main="infected (exposed + infectious)")#
plot(dat[dat$time>0, "time"], apply(dat[dat$time>0, c("Q", "R")], 1, sum), type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[3]), main="quarantined + recovered")#
matplot(dat[dat$time>0, "time"], dat[dat$time>0, c("H", "D")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c(hcl.colors(4, palette="viridis")[4], "black"), main="hospitalized and dead")#
if(files)dev.off()#
}#
#
# # #
# if(files)pdf(paste("flu_cost",num,".pdf",sep=''), height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# plot(dat[dat$time<=100, "time"], dat[dat$time<=100, "C"]/1e6, type='l', lty=1, lwd=1, xlab="", ylab="", las=1, xlim=c(0, 100), ylim=c(0, 5))#
# mtext("Cost (millions USD)", 2, line=2.75, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
# matlines(out[out$time<=100, "time"], out[out$time<=100, "C"]/1e6, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"))#
#
# if(files)dev.off()#
# if(files)pdf(paste("flu_compare",num,".pdf", sep=''), height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# matplot(dat[dat$time<=100, "time"], dat[dat$time<=100, c("S", "V", "I",  "R", "N")], type='l', lty=1, lwd=1, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"), xlim=c(0, 100))#
#
# legend("topright", c("Susceptible", "Vaccinated", "Infectious",  "Treated", "Natural"), col=c("red", "darkgray", "green", "blue", "magenta"), lty=1, lwd=2, bty='n')#
# mtext("Population densities (number/area)", 2, line=2.95, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
# matlines(out[out$time<=100, "time"], out[out$time<=100, c("S", "V", "I",  "R","N")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"))#
# points(dat[which(dat$I==min(dat$I)), c("time")], rep(-10, length(which(dat$I==min(dat$I)))), pch=19, cex=0.5)#
# if(files)dev.off()#
# }#
#
# num <- 2#
# dat <- sols[[num]]#
# min(dat[out$time<=100, "I"])#
#
# if(files)pdf("flu_sample.pdf",  height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# matplot(out[out$time<=100, "time"], out[out$time<=100, c("S", "V", "I",  "R","N")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"))#
#
# # matplot(dat[dat$time<=100, "time"], dat[dat$time<=100, c("S", "V", "I",  "R", "N")], type='l', lty=1, lwd=1, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"), xlim=c(0, 100))#
#
# legend("topright", c("Susceptible", "Vaccinated", "Infectious",  "Treated", "Natural"), col=c("red", "darkgray", "green", "blue", "magenta"), lty=1, lwd=2, bty='n')#
# mtext("Population densities (number/area)", 2, line=2.95, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
#
# if(files)dev.off()#
#
# if(files)pdf("cost_sample.pdf",  height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# matplot(out[out$time<=100, "time"], out[out$time<=100, "C"]/1e6, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"), xlim=c(0, 100), ylim=c(0, 5))#
#
# mtext("Cost (millions USD)", 2, line=2.75, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
# if(files)dev.off()#
# if(files)pdf("flu_compare.pdf",  height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# matplot(dat[dat$time<=100, "time"], dat[dat$time<=100, c("S", "V", "I",  "R", "N")], type='l', lty=1, lwd=1, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"), xlim=c(0, 100))#
#
# legend("topright", c("Susceptible", "Vaccinated", "Infectious",  "Treated", "Natural"), col=c("red", "darkgray", "green", "blue", "magenta"), lty=1, lwd=2, bty='n')#
# mtext("Population densities (number/area)", 2, line=2.95, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
#
# matlines(out[out$time<=100, "time"], out[out$time<=100, c("S", "V", "I",  "R","N")], type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("red", "darkgray", "green", "blue", "magenta"))#
# points(dat[which(dat$I==min(dat$I)), c("time")], rep(-10, length(which(dat$I==min(dat$I)))), pch=19, cex=0.5)#
# if(files)dev.off()#
# if(files)pdf("cost_compare.pdf", height=5, width=5)#
# par(mar=c(4.1, 4.1, 1.1, 1.1), mfrow=c(1, 1))#
# matplot(dat[dat$time<=100, "time"], dat[dat$time<=100, "C"]/1e6, type='l', lty=1, lwd=1, xlab="", ylab="", las=1, col=c("black"), xlim=c(0, 100), ylim=c(0, 5))#
# mtext("Cost (millions USD)", 2, line=2.75, cex=1.5, font=2) # y axis#
# mtext("Time (weeks)", 1, line=2.5, cex=1.5, font=2) # x axis#
#
# matlines(out[out$time<=100, "time"], out[out$time<=100, "C"]/1e6, type='l', lty=1, lwd=2, xlab="", ylab="", las=1, col=c("black"))#
# points(dat[which(dat$I==min(dat$I)), c("time")], rep(-10, length(which(dat$I==min(dat$I)))), pch=19, cex=0.5)#
# if(files)dev.off()
dat2 <- read.delim("~/Documents/GitHub/covid-19-data/us-states.csv", header=T, sep=',')
dat2[dat2$state=="New Hampshire",]
dat <- read.delim("~/Documents/GitHub/covid-19-data/us-counties.csv", header=T, sep=',')
dat[dat$state=="New Hampshire",]
head(dat[dat$state=="New Hampshire",])
head(dat[dat$state=="New Hampshire" & dat$county=="Hillsborough",])
dat[dat$state=="New Hampshire" & dat$county=="Hillsborough",]
library(deSolve) #
## The parameters #
parms <- c(#
  ## type parameter values here#
  r = 0.066,#
  k = 0.005, # carrying capacity#
  Omega = 1/365, ## vaccination rate ## vary this, multiply by 0.1, 0.01#
  Beta = 0.0019, ## infection rate#
  Gamma = 1/8, ##recovery rate#
  Delta = 1/(365*74), #natural death rate#
  Sigma = 0.95, ##avg of 2 vaccines#
  Rho = 1/10, ## exposure rate #
  Alpha = 0.09,#
  b = 10, #
  h = 12037, #
  g = 3037,#
  a = 76.68#
)#
parms[10:13] <- parms[10:13]/1000#
#
## if r*(S + V + R)*exp(-k*(S + V + R)) were r*(S + V + R + E + I)*exp(-k*(S + V + R + E + I))#
## then r*N*exp(-k*N) - delta*N == 0 means: #
nstar <- log(parms['r']/parms['Delta'])/parms['k']#
## is the equilibrium#
## vector of timesteps#
times <- seq(0, 365*300, by=1)#
## name this something that makes sense for your model. e.g., MEASmod #
MEASmod <- function(t, x, parms)  {#
  with(as.list(c(parms, x)), {#
    dS <- r*(S + V + R)*exp(-k*(S + V + R)) - Omega*S - Beta*S*I - Delta*S#
    dV <- Omega*S - Beta*(1.0-Sigma)*V*I - Delta*V    #
    dE <- Beta*S*I + Beta*(1.0- Sigma)*V*I - Rho*E - Delta*E #
    dI <- Rho*E - Gamma*I - Delta*I ## infected   #
    dR <- Gamma*I - Delta*R ## recovered#
    dC <- (1.0 - Alpha)*b*Beta*S*I + Alpha*h*Beta*S*I + a*Omega*S + g*Gamma*I    #
    list(c(dS, dV, dE, dI, dR, dC))#
  })#
}#
## intial conditions ##set the initial conditions for each variable. make sure these are in the same order as they are defined above#
## (xstart <- c(S=999, V=0, E=0, I=1, R=0, C=0))#
initi <- 0.001#
initv <- 0.01#
(xstart <- c(S=1-initi-initv, V=initv, E=0, I=initi, R=0, C=0)*nstar)#
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
##run model#
out <- as.data.frame(lsoda(xstart, times, MEASmod, parms, rtol=1e-3))#
## try this#
out$N <- apply(out[c('S', 'V', 'E', 'I', 'R')], 1, sum)#
out$time <- out$time/365#
ym <- 1000*max(ceiling(out$N/1000))#
plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray")#
matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, bg="white", lwd=2)#
ics <- out[out$time==90, ][2:7]#
for(i in 1:length(ics))xstart[i] <- ics[i]#
xstart <- unlist(xstart)#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
pdf("plots.pdf", height=10, width=10)#
par(mfrow=c(2, 2), mar=c(4.1,5.1,1.1,1.1))#
ym <- 1000*max(ceiling(out$N/1000))#
plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray")#
matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, bg="white", lwd=2)#
#
points(rep(90, length(ics)), ics, col=1:5, pch=19)#
par(new=T)#
matplot(out$time, out[c('E', 'I')], type='l', col=c(3:4), lty=3, lwd=1,  axes=F, xlab="", ylab="", ylim=c(0, 50))#
axis(4, las=1)#
#
plot(out$time, out[,'C'], type='l', lty=1, lwd=2, xlab ='time (in years)', ylab= 'Cost', log='y', las=1)#
#
matplot(out$time, out[c('S', 'V', 'E', 'I', 'R')]/out[, 'N'], type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Proportion', las=1)#
lines(out$time, apply(out[c('S', 'V', 'E', 'I', 'R')]/out[, 'N'], 1, sum), type='l', lty=1, lwd=2, col="gray")#
points(rep(90, length(ics)), ics/sum(ics[1:5]), col=1:5, pch=19)#
par(new=T)#
matplot(out$time, out[c('E', 'I')]/out[, 'N'], type='l', col=3:4, lty=3, lwd=1,  axes=F, xlab="", ylab="", ylim=c(0, 0.0025))#
axis(4, las=1)#
#
plot(out$time, parms['r']*(out$S + out$V + out$R)*exp(-parms['k']*(out$S + out$V + out$R)), type='l', lty=1, lwd=2, xlab ='time (in years)', ylab= 'birth rate', las=1, ylim=c(0, 5))#
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
par(mfrow=c(2, 2), mar=c(4.1,5.1,1.1,1.1))#
plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray", xlim=c(0, 2))#
matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, bg="white", lwd=2)#
#
plot(out$time, out[,'C'], type='l', lty=1, lwd=2, xlab ='time (in years)', ylab= 'Cost', log='y', las=1, xlim=c(0, 2))#
#
matplot(out$time, out[c('S', 'V', 'E', 'I', 'R')]/out[, 'N'], type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Proportion', las=1, xlim=c(0, 2))#
lines(out$time, apply(out[c('S', 'V', 'E', 'I', 'R')]/out[, 'N'], 1, sum), type='l', lty=1, lwd=2, col="gray")#
#
plot(out$time, parms['r']*(out$S + out$V + out$R)*exp(-parms['k']*(out$S + out$V + out$R)), type='l', lty=1, lwd=2, xlab ='time (in years)', ylab= 'birth rate', las=1, xlim=c(0, 5))#
dev.off()
library(deSolve) #
## The parameters #
parms <- c(#
  ## type parameter values here#
  r = 0.066,#
  k = 0.5, # carrying capacity#
  Omega = 1/365, ## vaccination rate ## vary this, multiply by 0.1, 0.01#
  Beta = 0.0019, ## infection rate#
  Gamma = 1/8, ##recovery rate#
  Delta = 1/(365*74), #natural death rate#
  Sigma = 0.95, ##avg of 2 vaccines#
  Rho = 1/10, ## exposure rate #
  Alpha = 0.09,#
  b = 10, #
  h = 12037, #
  g = 3037,#
  a = 76.68#
)#
parms[10:13] <- parms[10:13]/1000#
#
## if r*(S + V + R)*exp(-k*(S + V + R)) were r*(S + V + R + E + I)*exp(-k*(S + V + R + E + I))#
## then r*N*exp(-k*N) - delta*N == 0 means: #
nstar <- log(parms['r']/parms['Delta'])/parms['k']#
## is the equilibrium#
## vector of timesteps#
times <- seq(0, 365*300, by=1)#
## name this something that makes sense for your model. e.g., MEASmod #
MEASmod <- function(t, x, parms)  {#
  with(as.list(c(parms, x)), {#
    dS <- r*(S + V + R)*exp(-k*(S + V + R)) - Omega*S - Beta*S*I - Delta*S#
    dV <- Omega*S - Beta*(1.0-Sigma)*V*I - Delta*V    #
    dE <- Beta*S*I + Beta*(1.0- Sigma)*V*I - Rho*E - Delta*E #
    dI <- Rho*E - Gamma*I - Delta*I ## infected   #
    dR <- Gamma*I - Delta*R ## recovered#
    dC <- (1.0 - Alpha)*b*Beta*S*I + Alpha*h*Beta*S*I + a*Omega*S + g*Gamma*I    #
    list(c(dS, dV, dE, dI, dR, dC))#
  })#
}#
## intial conditions ##set the initial conditions for each variable. make sure these are in the same order as they are defined above#
## (xstart <- c(S=999, V=0, E=0, I=1, R=0, C=0))#
initi <- 0.001#
initv <- 0.01#
(xstart <- c(S=1-initi-initv, V=initv, E=0, I=initi, R=0, C=0)*nstar)#
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
##run model#
out <- as.data.frame(lsoda(xstart, times, MEASmod, parms, rtol=1e-3))#
## try this#
out$N <- apply(out[c('S', 'V', 'E', 'I', 'R')], 1, sum)#
out$time <- out$time/365#
ym <- 1000*max(ceiling(out$N/1000))#
plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray")#
matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, bg="white", lwd=2)
library(deSolve) #
## The parameters #
parms <- c(#
  ## type parameter values here#
  r = 0.066,#
  k = 0.05, # carrying capacity#
  Omega = 1/365, ## vaccination rate ## vary this, multiply by 0.1, 0.01#
  Beta = 0.0019, ## infection rate#
  Gamma = 1/8, ##recovery rate#
  Delta = 1/(365*74), #natural death rate#
  Sigma = 0.95, ##avg of 2 vaccines#
  Rho = 1/10, ## exposure rate #
  Alpha = 0.09,#
  b = 10, #
  h = 12037, #
  g = 3037,#
  a = 76.68#
)#
parms[10:13] <- parms[10:13]/1000#
#
## if r*(S + V + R)*exp(-k*(S + V + R)) were r*(S + V + R + E + I)*exp(-k*(S + V + R + E + I))#
## then r*N*exp(-k*N) - delta*N == 0 means: #
nstar <- log(parms['r']/parms['Delta'])/parms['k']#
## is the equilibrium#
## vector of timesteps#
times <- seq(0, 365*300, by=1)#
## name this something that makes sense for your model. e.g., MEASmod #
MEASmod <- function(t, x, parms)  {#
  with(as.list(c(parms, x)), {#
    dS <- r*(S + V + R)*exp(-k*(S + V + R)) - Omega*S - Beta*S*I - Delta*S#
    dV <- Omega*S - Beta*(1.0-Sigma)*V*I - Delta*V    #
    dE <- Beta*S*I + Beta*(1.0- Sigma)*V*I - Rho*E - Delta*E #
    dI <- Rho*E - Gamma*I - Delta*I ## infected   #
    dR <- Gamma*I - Delta*R ## recovered#
    dC <- (1.0 - Alpha)*b*Beta*S*I + Alpha*h*Beta*S*I + a*Omega*S + g*Gamma*I    #
    list(c(dS, dV, dE, dI, dR, dC))#
  })#
}#
## intial conditions ##set the initial conditions for each variable. make sure these are in the same order as they are defined above#
## (xstart <- c(S=999, V=0, E=0, I=1, R=0, C=0))#
initi <- 0.001#
initv <- 0.01#
(xstart <- c(S=1-initi-initv, V=initv, E=0, I=initi, R=0, C=0)*nstar)#
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
##run model#
out <- as.data.frame(lsoda(xstart, times, MEASmod, parms, rtol=1e-3))#
## try this#
out$N <- apply(out[c('S', 'V', 'E', 'I', 'R')], 1, sum)#
out$time <- out$time/365#
ym <- 1000*max(ceiling(out$N/1000))#
plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray")#
matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, bg="white", lwd=2)
2^(-(1:8))
pdf("change_k.pdf", height=10, width=10)#
par(mfrow=c(1, 1), mar=c(4.1,5.1,1.1,1.1))#
for(i in 1:8){#
	(xstart <- c(S=1-initi-initv, V=initv, E=0, I=initi, R=0, C=0)*nstar)#
	parms['k'] <- 2^(-i)#
	out <- as.data.frame(lsoda(xstart, times, MEASmod, parms, rtol=1e-3))#
	out$N <- apply(out[c('S', 'V', 'E', 'I', 'R')], 1, sum)#
	out$time <- out$time/365#
	ym <- 1000*max(ceiling(out$N/1000))#
	plot(out$time, out$N, type='l', lty=1, lwd=2, xlab ='time (in years)',  ylab= 'Population', las=1, ylim=c(0, ym), col="gray")#
	matlines(out$time, out[c('S', 'V', 'E', 'I', 'R')], type='l', lty=1, lwd=2)#
	legend("topright", c("S", "V", "E", "I", "R", "N"), lty=1, col=c(1:5, "gray"), ncol=3, 	bg="white", lwd=2)#
}#
dev.off()
table(0:100)
factorial(90)
factorial(91)
factorial(178)
factorial(177)
factorial(176)
factorial(175)
factorial(174)
for(i in 1:200)print(c(i, factorial(i)))
g <- function(a, b, x) a*x*exp(-b*x)
G <- function(a, b, x) (a*(1 - exp(-b*x) (1 + b*x)))/b^2
plot(g(1,0.1,x), xlim=c(0, 10))
plot(function(x)g(1,0.1,x), xlim=c(0, 10))
plot(function(x)g(1,0.1,x), xlim=c(0, 20))
curve(g(1.5,0.1,x), xlim=c(0, 20), add=T)
plot(function(x)g(1,0.1,x), xlim=c(0, 20), ylim=c(0, 5))
curve(g(1.5,0.1,x), xlim=c(0, 20), add=T)
plot(function(x)g(1,0.1,x), xlim=c(0, 20), ylim=c(0, 10))
curve(g(1.5,0.1,x), xlim=c(0, 20), add=T)
g <- function(a, b, x) a*x*exp(-b*x)#
G <- function(a, b, x) (a*(1 - exp(-b*x) (1 + b*x)))/b^2#
plot(function(x)g(1,0.1,x), xlim=c(0, 50), ylim=c(0, 10))#
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T)
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 10))
G <- function(a, b, x) (a*(1 - exp(-b*x)*(1 + b*x)))/b^2
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 10))
curve(G(1.5,0.1,x), xlim=c(0, 50), add=T)
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 100), lwd=2)
curve(G(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 200), lwd=2)
curve(G(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
par(mfrow=c(1, 2))
plot(function(x)g(1,0.1,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 200), lwd=2)
curve(G(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)g(0.5,0.1,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)g(0.5,0.05,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)g(0.5,0.05,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
plot(function(x)g(0.5,0.075,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
g <- function(a, b, x) a*x*exp(-b*x)#
G <- function(a, b, x) (a*(1 - exp(-b*x)*(1 + b*x)))/b^2#
par(mfrow=c(1, 2))#
plot(function(x)g(1, 0.1,x), xlim=c(0, 50), ylim=c(0, 10), lwd=2)#
curve(g(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)#
#
plot(function(x)G(1,0.1,x), xlim=c(0, 50), ylim=c(0, 200), lwd=2)#
curve(G(1.5,0.1,x), xlim=c(0, 50), add=T, lwd=2, col=2)
6+5+4+3+2+1
1/21
plot((1:6)/21)
plot((1:6)/21, ylim=c(0, 1))
6/21
(1:6)/21
cumsum((1:6)/21)
plot(cumsum((1:6)/21))
integrate(function(x)6*x*(1-x), lower=0, upper=1)
3109/47984
plot(function(x)(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4))
plot(function(x)2*(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4))
plot(function(x)10*(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4))
plot(function(x)10*(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)2*(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)1*(x-1)*(x-2)*(x-3) + 1, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)1*(x-1)*(x-2)*(x-3) + 2, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)1*(x-1)*(x-2)*(x-4) + 2, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)1*(x+1)*(x-2)*(x-4) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1*(x+1)*(x-0)*(x-1) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1*(x+2)*(x-0)*(x-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/2*(x+2)*(x-0)*(x-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/3*(x+2)*(x-0)*(x-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/4*(x+2)*(x-0)*(x-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/4*((x+2)+2)*((x+2)-0)*((x+2)-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(-4, 4), ylim=c(0, 4))
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(0, 4), ylim=c(0, 4))
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(0, 5), ylim=c(0, 4))
plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))
plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5))
plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5))
plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))
plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)
abline(h=0, lty=3)
abline(v=0, lty=3)
abline(v=2, lty=3)
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(0, 5), ylim=c(0, 4))#
abline(h=0, lty=3)#
abline(v=0, lty=3)
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(0, 5), ylim=c(0, 4), las=1)
abline(h=0, lty=3)
abline(v=0, lty=3)
par(xaxs='i', yaxs='i')
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(0, 5), ylim=c(0, 4), las=1)
abline(h=0, lty=3)
abline(v=0, lty=3)
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(-1, 5), ylim=c(0, 4), las=1)
par(xaxs='i', yaxs='i')
plot(function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2, xlim=c(-1, 5), ylim=c(0, 4), las=1)
abline(h=0, lty=3)
abline(v=0, lty=3)
fp <- function(x)(x-4)*(2*x-2)+(x-2)*x)/4
abline(a = f(4) - fp(4)*4, b = fp(4))
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1)#
abline(h=0, lty=3)#
abline(v=0, lty=3)#
abline()#
#
fp <- function(x)(x-4)*(2*x-2)+(x-2)*x)/4#
abline(a = f(4) - fp(4)*4, b = fp(4))
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1)#
abline(h=0, lty=3)#
abline(v=0, lty=3)#
# abline()#
#
abline(a = f(4) - fp(4)*4, b = fp(4))
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))
abline(a = f(4) - fp(4)*4, b = fp(4))
points(c(0, 1, 4), sapply(c(0, 1, 4), f))
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1)#
abline(h=0, lty=3)#
abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)
axis(1, c(0, 1, 4), c("a", "b", "c"))
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
abline(h=0, lty=3)#
abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
box()
axis(2, 0)
axis(2, 0, las=1)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
abline(h=0, lty=3)#
abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, c(f(0), f(1), f(4)), c("f(a)", "f(b)", "f(c)"))#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
axis(2, c(f(0), f(1), f(4)), c("f(a)", "f(b)", "f(c)"), las=1)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, c(f(0), f(1), f(4)), c("f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
c(f(0), f(1), f(4))
axis(2, c(0, f(0), f(1)), c(0, "f(a) = f(c)", "f(b)"), las=1)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, c(0, f(0), f(1)), c(0, "f(a) = f(c)", "f(b)"), las=1)#
axis(2, 0, las=1)#
#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
box()
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
abline(a = f(0) - (f(1)-f(0))*0, b = (f(1)-f(0)))#
abline(a = f(4) - fp(4)*4, b = fp(4))#
points(c(0, 1, 4), sapply(c(0, 1, 4), f), pch=19)#
axis(1, c(0, 1, 4), c("a", "b", "c"))#
axis(2, c(0, f(0), f(1)), c(0, "f(a) = f(c)", "f(b)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- -0.5#
x1 <- 1.5#
x2 <- 4.5#
abline(a = f(x0) - (f(x1)-f(x0))*x0, b = (f(x1)-f(x0)))#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1)), c(0, "f(a) = f(c)", "f(b)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- -0.5#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1)), c(0, "f(a) = f(c)", "f(b)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- -0.5#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 4), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
abline(a = f(x0) - msec*x0, b = msec)#
abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=2#
)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftab(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 5), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5), ylim=c(0, 6), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mrow=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)")#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)", font.lab=2)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)", font.lab=2, cex.lab=1.5)
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)", font.lab=2, cex.lab=1.5)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)", font.lab=2, cex.lab=1.35)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
png("rates.png")#
par(mar=c(4.1, 4.1, 0.8, 0.8), xaxs='i', yaxs='i')#
f <- function(x)1/4*((x-2)+2)*((x-2)-0)*((x-2)-2) + 2#
fp <- function(x)((x-4)*(2*x-2)+(x-2)*x)/4#
#
plot(f, xlim=c(-1, 5.5), ylim=c(0, 6), las=1, axes=F, lwd=2, xlab="x", ylab="y = f(x)", font.lab=2, cex.lab=1.35)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)#
# abline()#
#
x0 <- 0#
x1 <- 1.5#
x2 <- 4.5#
#
msec <- (f(x1)-f(x0))/(x1-x0)#
fsec <- function(x) f(x0) + msec*(x-x0)#
ftan <- function(x) f(x2) + fp(x2)*(x-x2)#
#abline(a = f(x0) - msec*x0, b = msec)#
#abline(a = f(x2) - fp(x2)*x2, b = fp(x2))#
arrows(x0-0.5, fsec(x0-0.5), x1+0.5, fsec(x1+0.5), code=3, length=0.1)#
arrows(x2-0.5, ftan(x2-0.5), x2+0.5, ftan(x2+0.5), code=3, length=0.1)#
points(c(x0, x1, x2), sapply(c(x0, x1, x2), f), pch=19)#
axis(1, c(x0, x1, x2), c("a", "b", "c"))#
axis(2, c(0, f(x0), f(x1), f(x2)), c(0, "f(a)", "f(b)", "f(c)"), las=1)#
axis(2, 0, las=1)#
box()#
dev.off()#
# plot(function(x)((x-4)*(2*x-2)+(x-2)*x)/4, xlim=c(0, 5))#
# plot(function(x)(2*(x-4)+2*x-2+2*x-2)/4, xlim=c(0, 5), add=T)#
# abline(h=0, lty=3)#
# abline(v=0, lty=3)
x <- -3:5
y <- c(2, -4, 4, -4, 0, 2, -2, 0, 1)
plot(y ~ z)
plot(y ~ x)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4))
plot(y ~ z)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4))
plot(y ~ z)
plot(y ~ x)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4), add=T)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4), xlim=c(-3, 5), add=T)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/10, xlim=c(-3, 5), add=T)
plot(y ~ x)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/10, xlim=c(-3, 5), add=T)
plot(function(x)(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/2, xlim=c(-3, 5), add=T)
plot(function(x)-(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/2, xlim=c(-3, 5), add=T)
plot(y ~ x)
plot(y ~ x, ylim=c(-10, 10))
plot(function(x)-(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/2, xlim=c(-3, 5), add=T)
plot(function(x)-(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/20, xlim=c(-3, 5), add=T)
plot(function(x)-(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/15, xlim=c(-3, 5), add=T)
plot(function(x)-(x+4)*(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/15, xlim=c(-3, 5), add=T)
plot(function(x)-(x+3)*(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/15, xlim=c(-3, 5), add=T)
plot(y ~ x, ylim=c(-10, 10))
plot(function(x)-(x+3)*(x+2.5)*(x+1.5)*(x+0.5)*(x-1)*(x-2.5)*(x-3.5)*(x-4)/15, xlim=c(-3, 5), add=T)
plot(function(x)exp(-x)*sin(pi*x) xlim=c(-3, 5), add=T)
plot(function(x)exp(-x)*sin(pi*x), xlim=c(-3, 5), add=T)
plot(function(x)exp(-x/2)*sin(pi*x), xlim=c(-3, 5), add=T)
plot(function(x)exp(-0.1*x)*sin(pi*x), xlim=c(-3, 5), add=T)
plot(function(x)5*exp(-0.1*x)*sin(pi*x), xlim=c(-3, 5), add=T)
plot(y ~ x, ylim=c(-10, 10))
plot(function(x)5*exp(-0.1*x)*sin(pi*x), xlim=c(-3, 5), add=T)
plot(function(x)5*exp(-0.1*x)*sin(pi/2*x), xlim=c(-3, 5), add=T)
plot(function(x)5*exp(-0.1*x)*sin(pi/4*x), xlim=c(-3, 5), add=T)
plot(y ~ x, ylim=c(-10, 10))
plot(function(x)5*exp(-0.1*x)*sin(pi/2*x), xlim=c(-3, 5), add=T)
x1 <- seq(0, 0.3, by=100)
y1 <- dnorm(x1)
plot(x1, y1)
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
plot(x1, y1)
x <- seq(-5, 5, length=100)
y <- dnorm(x)
plot(x, y, type='l')
plot(x1, y1, add=T)
lines(x1, y1)
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
plot(x, y, type='l')#
#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1)
lines(x1, y1, col=2)
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)))
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=1)
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=10)
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1))#
plot(x, y, type='l')#
#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, type='l', las=1)#
#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
plot(x, y, type='l', las=1, axes=F)
axis(1)
axis(2)
axis(2, (0:5)/10, las=1)
axis(2, (0:4)/10, las=1)
axis(2, at=(0:4)/10, las=1)
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F)
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F)#
axis(1)#
axis(2, at=(0:4)/10, las=1)#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
box()
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F)#
axis(1)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
axis(1, at=-5:5)
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal")
x <- seq(-5, 5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal")#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
lines(x1, y1, col=2)#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20)
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)
polygon(c(rev(-x2), rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
x2 <- seq(0, 0.3, length=100)#
y2 <- dnorm(x1)
polygon(c(rev(-x2), rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-5, 5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
x <- seq(-2.5, 2.5, length=100)#
y <- dnorm(x)#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)#
#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x1)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x3)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 0.2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)
x <- seq(-2.5, 2.5, length=100)#
y <- dnorm(x)#
png("std_norm1.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)#
#
png("std_norm2.png")#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm3.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x3)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm4.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)#
dev.off()
x <- seq(-2.5, 2.5, length=100)#
y <- dnorm(x)#
png("std_norm1.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)#
dev.off()#
png("std_norm2.png")#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm3.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x3)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm4.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)#
dev.off()
x <- seq(-2.5, 2.5, length=100)#
y <- dnorm(x)#
png("std_norm1.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)#
dev.off()#
png("std_norm2.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm3.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x3)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm4.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)#
dev.off()
x <- seq(-2.5, 2.5, length=100)#
y <- dnorm(x)#
png("std_norm1.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x1 <- seq(0, 0.3, length=100)#
y1 <- dnorm(x1)#
#
polygon(c(x1, rev(x1)), c(0*x1, rev(y1)), col=2, density=20, lwd=2)#
dev.off()#
png("std_norm2.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x2 <- c(-rev(x1), x1)#
y2 <-  c(rev(y1), y1)#
#
polygon(c(x2, rev(x2)), c(0*x2, rev(y2)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm3.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x3 <- seq(0.3, 0.6, length=100)#
y3 <- dnorm(x3)#
#
polygon(c(x3, rev(x3)), c(0*x3, rev(y3)), col=2, density=20, lwd=2)#
dev.off()#
#
png("std_norm4.png")#
par(mar=c(4.1, 5.1, 1.1, 1.1), xaxs='i', yaxs='i')#
plot(x, y, xlim=c(-2.5, 2.5), ylim=c(0, 0.5), type='l', las=1, axes=F, ylab="Standard Normal", lwd=2)#
axis(1, at=-5:5)#
axis(2, at=(0:5)/10, las=1)#
box()#
x4 <- seq(0.6, 2.5, length=100)#
y4 <- dnorm(x4)#
#
polygon(c(x4, rev(x4)), c(0*x4, rev(y4)), col=2, density=20, lwd=2)#
dev.off()
