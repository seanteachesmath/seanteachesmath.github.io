<?xml version="1.0" encoding="UTF-8" ?>
<!-- Generated by Pandoc using pretext.lua -->
<pretext>
<book xml:id="Tech-Prof-Math-Stat">
<title>Technology for Professional Mathematics and Statistics</title>


	<frontmatter xml:id="frontmatter">
	
<titlepage>
        <author>
            <personname>Sean Laverty</personname>
            <department>Department of Mathematics and Statistics</department>
            <institution>University of Central Oklahoma</institution>
            <email>slaverty@uco.edu</email>
        </author>
        
<date><today/></date>
</titlepage>

<preface>
<title>Introduction</title>			
		<p>I encourage you to use this class as an
opportunity to treat computers as scientific tools. All computers are
slightly different, so don’t be afraid to look at the preferences of the
program to add line numbers to code, enable syntax highlighting (so
commands shine in bright colors), or to make fonts larger in your text editor , Stare at error
messages and try to pick out key words, keep a close eye on the
differences between <c>{</c>, <c>[</c>, and <c>(</c> and their partners,
and the direction you make your slashes.
		</p>

		<p>			The course directory will be shared, you might
occasionally see a lot of new file extensions. A better or alternative
way to write this document involves writing separate files each day,
then reading these into a <sq>master</sq> file.
		</p>

		<table xml:id="file-table" >
			<caption></caption>
			<tabular>
			<row class="odd">
				<cell halign="left">.tex</cell>
				<cell halign="left">main <latex/> file</cell>
			</row>
			<row class="even">
				<cell halign="left">.pdf</cell>
				<cell halign="left">desired output</cell>
			</row>
			<row class="odd">
				<cell halign="left">.toc</cell>
				<cell halign="left">contents information</cell>
			</row>
			<row class="even">
				<cell halign="left">.log</cell>
				<cell halign="left">console report (errors,
warnings)</cell>
			</row>
			<row class="odd">
				<cell halign="left">.idx</cell>
				<cell halign="left">related to index</cell>
			</row>
			<row class="even">
				<cell halign="left">.toc</cell>
				<cell halign="left">contents information</cell>
			</row>
			<row class="odd">
				<cell halign="left">.aux</cell>
				<cell halign="left">used for contents</cell>
			</row>
			</tabular>
		</table>

			<p>	<title>Themes</title>
			The themes of the course are typesetting,
numerical calculations, and symbolic calculation. Towards the end of the
semester, a goal of more open-ended problem solving should emerge. The
hope is to use our tools to solve some of your more open-ended problems
and learn how to diagnose and correct problems in coding.
			</p>
			
		<p>			Copies of your homework assignments will be
collected here on separate pages. They will be listed in the order
assigned, first <latex/>, then <c>R</c>, then <c>sage</c>.
		</p>
		
			</preface>


			


	</frontmatter>

<!-- end of section -->
<!-- end of section -->
<!-- end of section -->

	<chapter xml:id="latex">
		<title><latex/></title>


		<section
xml:id="setting-up-folders-and-files-testing-latex">
			<title>Setting up folders and files, testing <latex/>
</title>


			<subsection xml:id="preview">
				<title>Preview</title>

				<p>Our plan is to introduce the main objectives of the
class (i.e., syllabus and outline), then set up our user names, folders,
and sharing. We will test <latex/> by opening a blank document and building
up features based on classroom requests.
				</p>

			</subsection>

			<subsection xml:id="review">
				<title>Review</title>

				<p>We used the interface <idx>TeXworks</idx> Software
interface , TeXWorks on <url
href="https://drive.google.com/folderview?id=
0B5iVT8Q7W44pYzBwMjFBWGdVVHM&amp;tid=0B5iVT8Q7W44pMkNLblFjUzdQUVE">
Windows OS (link)</url> <idx> OS , Windows</idx> computers
<em>additionally</em> Windows users will need to install an
<em>engine</em> either TeXLive <url
href="http://mirror.ctan.org/systems/texlive/tlnet/install-tl-windows.
exe">(link)</url> <idx> Software engine , TexLive or MikTeX</idx>
<idx>Software engine , MiKTeX </idx><url
href="http://mirrors.ctan.org/systems/win32/miktex/setup/basic-miktex-2.
9.5105.exe">(link)</url>. You will want to plug your computer in, turn
off any antivirus software (these are safe programs), and give yourself
plenty of time for the downloads. Things are a bit easier on Mac OS, we
use TeXshop  <idx> Software interface , TeXshop</idx> that comes from
the MacTeX <idx> Software engine , MacTeX installer</idx> on <url
href="http://www.tug.org/mactex/mactex-download.html">Mac OS
(link)</url> <idx> OS , Mac</idx>.
				</p>

				<p>With software in hand, we compiled the syllabus (we
will look more at its code next time). We spent the rest of our time
opening a blank document, setting up the main structure of the document,
and practicing typing text and math. In the main structure we set the
document class, began the document, and added sections with
<c>section...</c> <idx> <latex/> , structure </idx> <sq>section</sq> and
sections with <c>section...</c>  <idx> <latex/> , structure </idx>
<sq>section</sq>. We learned a couple ways to present math, inline,
centered displaystyle, and inline with displaystyle. In defining some
integrals we learned that subscripts have to be placed in brackets if
they contain more than one character. To include mathematical symbols we
had to use a <sq>package</sq> in the preamble with the command
<c>\usepackage{amsmath}</c> <idx> <latex/> , packages , amsmath</idx>.
				</p>

			</subsection>

			<subsection xml:id="student-perspective">
				<title>Student perspective</title>

				<p>We learned today that we’ll be building our own
textbook for this class as we advance through the semester. We’ll learn
the some of the basic coding techniques of <c>R</c>, <c>sage</c>, and
<latex/> in this class, and I’ve got to say I’m a little nervous about that
- just today we learned a bunch of things which I’m sure will be
important later. Typing the <q>percent</q> symbol in a line of code, for
example, hides the line from that point forward so we can make notes to
ourselves (and the professor, I imagine). This will be incredibly useful
(for me, at least) to learn as we go. We found that <q>backslash</q>
<idx> students , <latex/> ,</idx> slash is going to be used a lot, and I
only used <q>forward slash</q> in its place like ...five times , (I’ve
yet to master the art of staring at a compile-error screen students ,
{\<latex/>} , errors with dignity ... it’s mostly confusing to me, still)
We learned how to make a title, a new page, sections and sections,
and a couple math commands to make symbols such as integrals. I feel
like the most important thing we learned today is having a begin(ning)
and an end to just about all of our commands. The commands can be
manipulated, like math equations, but it is clear that they follow very
strict rules - evidenced by my many, many failed attempts at compiling
integrals , And if anybody is curious, the <q>and</q> symbol does
something weird and prevents compiling...must investigate further. Great
first day , I imagine this will prove to be a very stimulating class.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes">
				<title>Instructional notes</title>

				<p>See the file <c>day2.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="more-math-and-other-environments-0820">
			<title>More math and other environments</title>


			<subsection xml:id="preview-1">
				<title>Preview</title>

				<p>We will continue typing mathematical content and
learning about some other <sq>environments</sq> in <latex/> to achieve
particular formats for our written content.
				</p>

			</subsection>

			<subsection xml:id="review-1">
				<title>Review</title>

				<p>Today we opened up our template from Day 1 and
continued with the <sq>list</sq> environments <c>itemize</c> INDEX <latex/>
, list , <sq>itemize</sq> and <c>enumerate</c> <idx> <latex/> , list ,
<sq>enumerate</sq></idx>. We reviewed the different subtleties of math
display, then to move forward from single terms or equations ended up on
the aligned math environments <c>align</c> and <c>align*</c>. It was
important to note that <c>&amp;</c> was required as our alignment
anchor, otherwise things did not actually align very well.
				</p>

				<p>Miscellaneous tasks included making a table of
contents and adjusting text spacing with <c> </c> <idx> <latex/> ,
positioning , new line, <c>vspace...</c></idx>,  <idx> <latex/> ,
positioning , vertical space</idx>, and more aggressively <c>newpage</c>
<idx> <latex/> , positioning , <sq>newpage</sq></idx>.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-1">
				<title>Student perspective</title>

				<p>Today in class we learned more about formatting in
<latex/>. <latex/> is used in all sorts of things I’ve never even realized -
it makes sense now why nearly all my Math tests and Textbooks look the
same, even if they are for different classes and different subjects.
Class began with us looking at a typical Math test, and us learning how
to format things similarly to the test. We learned the little things I
often forget - how to add space, how to make information jump down to a
new line (using <c></c>), and how to make bulleted and numbered lists.
Errors often pop in <latex/>, so it’s important to always check and double
check that you spell <idx> students , <latex/></idx> , spell check all your
commands correctly and that you don’t forget a <c></c> at the beginning
of the line. We also learned that if you add different coding up in the
preamble, it can affect your whole document. For example, we added code
to the top of our document entitled <c>usepackageamsmath</c>, which
allowed us to later in our document use code for aligning text.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-1">
				<title>Instructional notes</title>

				<p>See the file <c>day3.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="environments-figure-and-table-0825">
			<title>Environments: Figure and Table</title>


			<subsection xml:id="preview-2">
				<title>Preview</title>

				<p>We will continue learning about some other
<sq>environments</sq> in <latex/> to achieve particular formats for our
written content.
				</p>

			</subsection>

			<subsection xml:id="review-2">
				<title>Review</title>

				<p>Today we introduced the first homework assignment in
which you will write about the limit definition of the derivative.
				</p>

				<p>We learned <c>includegraphics</c> and the
<c>beginfigure[htbp]...endfigure</c> <idx> <latex/> , floats , figure</idx>
<idx> <latex/> , floats , htbp placement see also positioning</idx>
				</p>

				<p>environment, we adjusted the size and spacing of the
image itself and its positioning (centering) within the figure. The
figure options <c>htbp</c> refer to <sq>here</sq>, <sq>top</sq>,
<sq>bottom</sq>, or a new <sq>page</sq> and control where a figure (or
table) is placed relative to the text that surrounds it. Based on the
particular preferences of a given computer we sometimes include or do
not include the file extension in <c>includegraphics...</c>, so learn
what works for you on a given computer and stick with it. If you get
<sq>File not found</sq> errors it is because you either spelled the file
name wrong, added or omitted a file extension, or forgot to include the
file in the same directory as your <c>.tex</c> file.
				</p>

				<p>Much like <c>includegraphics</c> was nested within
<c>beginfigure[htbp]...endfigure</c>, we ended with a brief look at
<c>begintabular...endtabular</c> which we nested inside
<c>begintable[htbp]...endtable</c> <idx> <latex/> , floats , table</idx> to
achieve the proper referencing and labeling. Within each of these we
introduced the caption command <c>caption...</c> <idx> <latex/> , floats ,
caption</idx> and the label command <c>labeltype::...</c> <idx> <latex/> ,
floats , reference</idx>. The <c>labeltype::...</c> will prove useful
when combined with the referencing command <c>reftype::...</c> to help
us count references to a given float type by their name. This means we
never write a text reference to a figure as <c>Figure 1</c> or
<c>Fig. 1</c> we will always instead use <c>Figure [fig::...]</c> where
<c>...</c> refers to some meaningful text label applied to the figure.
Above, <c> </c> is the command for a nonbreaking space, this prints a
space between the text <sq>Figure</sq> and the reference number, but
will not allow that space to break across lines or pages. For each of
these we use <c>centering</c> INDEX <latex/> , positioning ,
<sq>centering</sq> to display the object centered in the page.
				</p>

				<p>To display graphics we needed to add
<c>usepackagegraphicx</c> INDEX <latex/> , packages , graphicx in the
preamble. Additionally, we introduced <c>usepackagegeometry</c> INDEX
<latex/> , packages , geometry in the preamble to adjust margins.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-2">
				<title>Student perspective</title>

				<p>We began by talking about inserting graphics into a
<latex/> document. We downloaded a graph of our choosing from the shared
drive, and placed it in the same folder as our <c>.tex</c> files, and
then learned how to add it to our document using the package
<c>graphicx</c> as well as how to change the width (by adding
<c>[width=x]</c> to the includegraphics command) of the graphic. We then
learned how to make captions and reference it within a document using
the <c>caption...</c> command and the <c>label...</c> and <c>ref...</c>
commands.. Finally, we learned how to make tables inside of a document
to show off information using the command <c>begintable</c> , such as
explaining the types of discontinuity in the figure we added. We learned
to justify the tables to the right, left, or center by adding a r, l, or
c to the top of the table, respectively. We also learned the centering
command to center graphics added to our documents.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-2">
				<title>Instructional notes</title>

				<p>See the file <c>day3.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="general-observations-labels-references-and-homework-0827">
			<title>General observations, labels, references, and
homework</title>


			<subsection xml:id="preview-3">
				<title>Preview</title>

				<p>We will continue learning about some other
<sq>environments</sq> in <latex/> to achieve particular formats for our
written content. We will focus on labels and references, then take a
break to work on homework.
				</p>

			</subsection>

			<subsection xml:id="review-3">
				<title>Review</title>

				<p>After working on our first homework assignment, we
looked at including multiple tables and figures with nice
cross-referenced label numbers using <c>labeltype::...</c>  INDEX <latex/>
, references and cross-references , <sq>label</sq> to label the figure
or table and <c>reftype::...</c>  INDEX <latex/> , references and
cross-references , <sq>ref</sq> to reference it in text. We also
summarized our first couple weeks of class by using a new list
environment called <c>description</c> INDEX <latex/> , list ,
<sq>description</sq> to give text <sq>bullets</sq> to group information.
				</p>

				<p>In the middle of class we took some time to work on
homework. A variety of problems were encountered, some listed below:
				</p>

			</subsection>

			<subsection xml:id="student-perspective-3">
				<title>Student perspective</title>

				<p>We started the first 15 minutes of class working on
the prompt 1 homework assignment and asking questions about issues and
problems that we were having. Next we started with a new blank document
saved as day 4 so that we could add graphics and the tables from day 3.
We copy pasted the tables that we had previously created and created a
cross-reference by using a different label and then referencing the
second table. <latex/> handles labeling efficiently and will automatically
track where graphs are located. Then we added two different graphs on a
new page. We ended the class with quickly re-sizing the graphs to fit on
the page comfortably.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-3">
				<title>Instructional notes</title>

				<p>See the file <c>day4.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="more-math-environments-and-bibtex">
			<title>More math environments and BiBTeX</title>


			<subsection xml:id="preview-4">
				<title>Preview</title>

				<p>We will continue learning about some other
<sq>environments</sq> in <latex/>, in particular we will introduce methods
for counting theorems, proofs, and other specific elements. To round out
our use of referencing, we will look at B-.05emi-.025em b-.08em
T-.1667em.7exE-.125emX the bibliography management and citation system.
				</p>

			</subsection>

			<subsection xml:id="review-4">
				<title>Review</title>

				<p>Today we introduced <c>usepackageamsthm</c> to define
‘theorem‘-like environments. These included the named and numbered
example, definition, and theorem, while proof was already built-in. Re
practiced referencing a theorem in the example, and were careful to note
that the label of the object we were referencing had to be placed within
the environment.
				</p>

				<p>We spent a bit of time downloading some bibliographic
information, saving it as a <c>.bib</c> file, and incorporating that
information into a document. We had to adjust our workflow to run
<c>pdf<latex/></c> which identifies the items to be cited in a separate
auxiliary file, then <c>bibtex</c> to search the bibliography file for
the citation information, and finally <c>pdf<latex/></c> again to print the
bibliography. As with our work on including graphics files, it was
important to notice on your particular computer whether the filenames
were explicitly included in the file. Also, use the drop down menus to
identify the <c>.bib</c> files when appropriate. We never want to use
more than one dot in a file name, so something like
<c>reference.bibtex.tex</c> is certain to cause confusion about how that
file should actually be treated. If it seems laborious to click three
times, compare this to the effort required to manage this information
yourself, or venture into a custom compiler to automate this process.
				</p>

				<p>The Reed College Computing and Information Services
has a nice image of the <latex/>/B-.05emi-.025em b-.08em
T-.1667em.7exE-.125emX process, illustrated in Fig. <xref
ref="fig::bibtexreed" />.
				</p>

				<figure>
	<image source="./samples/bibtexreed.png"/>
<caption>A nice figure from <url
href="https://www.reed.edu/cis/help/latex/BibtexOverview.html">https://
www.reed.edu/cis/help/<latex/>/BibtexOverview.html</url> illustrating the
interplay between <latex/> and B-.05emi-.025em b-.08em
T-.1667em.7exE-.125emX. My only complaint about the illustration is the
naming of the file <c> foo.bib</c>, in general this .bib file can have
its own unique name. Notice that <c>foo.aux</c>, <c>foo.bbl</c> derive
their names from the original <c>.tex</c> file. Once you have run
BiBTeX, look at the
corresponding <c>.bbl</c> file. In fact, it is readable just as your
<c>.tex</c> file.</caption>
</figure>

			</subsection>

			<subsection xml:id="student-perspective-4">
				<title>Student perspective</title>

				<p>Today in class we learned about theorem and
bibliography. First, we needed to use the <c>amsmath</c> and
<c>amsthm</c> packages. The <c>amsmath</c> package was for math
environment and <c>amsthm</c> was for theorem environment. Then we
started with making a theorem environment. To make a theorem
environment, we needed to do more work in a preamble by defining a new
counted environment called <sq>theorem</sq>. INDEX students , <latex/> ,
custom environments
				</p>

				<p>The same process was used to make example and
definition environment. However, for proof environment, we did not have
to add anything in the preamble. After learning about theorem, we then
proceeded to learn about bibliography INDEX students , <latex/> ,
B-.05emi-.025em b-.08em T-.1667em.7exE-.125emX. We first need to add
another package which is <c>natbib</c>. After that, we used google
search engine to find a book for an example. Then we downloaded the
B-.05emi-.025em b-.08em T-.1667em.7exE-.125emX file, put it in the same
folder with the notes <c>day5.tex</c> and open in TeXWorks. Then we made
day5.tex recognize the B-.05emi-.025em b-.08em T-.1667em.7exE-.125emX
file. We also needed to use B-.05emi-.025em b-.08em
T-.1667em.7exE-.125emX typeset to make day5.tex recognize the
B-.05emi-.025em b-.08em T-.1667em.7exE-.125emX.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-4">
				<title>Instructional notes</title>

				<p>See the file <c>day5.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="proof-formatting-and-some-special-symbols-0903">
			<title>Proof formatting and some special symbols
</title>


			<subsection xml:id="preview-5">
				<title>Preview</title>

				<p>We will practice with some of the other
<sq>environments</sq> in <latex/>, in particular we will state a claim and
format and present its proof. We will also look at a few other special
mathematical symbols.
				</p>

			</subsection>

			<subsection xml:id="review-5">
				<title>Review</title>

				<p>Though not all of us had proof-writing experience
(that’s okay) we presented a proof of the claim that <q>the number
<m>n^2 - n</m> is always even for integers <m>n</m>.</q> The method was
proof by cases, or for some of you something better known as proof by
exhaustion. There were quite a few observations regarding the structure
of commands. In particular, <c>beginalign...endalign</c> is coded to
produce math displays of its contents. No additional mathematical
delimiters <c>(...)</c> or <c>[...]</c> are required or desired. In
general, we want to use these somewhat sparingly, that is write
<sq><m>n^2-n</m></sq> as <c>(n^2-n)</c>, rather than <c>(n^2) - n</c>,
in this second form, the spacing will be wrong and we lose the fact that
the expression is a single object. We should also avoid putting blank
lines inside <c>align</c> environments, remember our end of line
characters <c></c>, and our carefully spaced alignment characters
<c>&amp;</c>.
				</p>

				<p>Our Greek alphabet is coded mostly as it is spelled,
with lower case giving the typical letters and a capitalized name giving
the <sq>big</sq> or capital Greek letter. Some of the capital Greek
letters do not look all that different from our typical Roman letters.
Many other commands are spelled quite intuitively, for sums
<c>sum......</c>, <c>int</c> for integrals, and <c>iint</c> for double
integrals.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-5">
				<title>Student perspective</title>

				<p>On this Thursday, we reviewed how to use those
packages which are amsmath, amsthm, and geometry INDEX students , <latex/>
, packages. We already explained amsmath and amsthm in this first page.
For geometry package, we can change the page layout by setting the
margin that you want. Also, It is better that we use <sq>slash
bracket</sq> to delimit a whole equation than to do so word by word.
INDEX students , <latex/> , efficient math delimiters Moreover, we can
reset the number of steps for counting numbered items by using
setcounter. We specify the item and the start of the numbers as
arguments of setcounter. We will put <sq>equation</sq> in this first
bracket and put the <sq>number</sq> before that you want. Finally, we
learn some new symbols which are dollar symbol, sum symbol, and two
different epsilon symbols. INDEX students , <latex/> , more symbols
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-5">
				<title>Instructional notes</title>

				<p>See the file <c>day6.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="beamer-presentations-0908">
			<title>Beamer presentations</title>


			<subsection xml:id="preview-6">
				<title>Preview</title>

				<p>Today we will design a beamer presentation and look
at a couple elements helpful in presentations. The content of the work
today will feature the last major symbols and mathematical operations
that remain.
				</p>

			</subsection>

			<subsection xml:id="review-6">
				<title>Review</title>

				<p>How did I forget to write this , ? I’ll have to
review my notes DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-6">
				<title>Student perspective</title>

				<p>Today we learned about how to make a beamer
presentation using <latex/>. By doing so, we learned a new document class
we can use for our codes and how to make something akin to a slideshow
without using powerpoint. It’s good for experience and just adds to our
growing pool of knowledge on how to use this program to its unending
potential. Using beamer, we learned how to make frames and divide
everything into sections for cleanliness. We then learned how to divide
a frame into two mini pages and how to add graphics and text to the two
minipages and align them together. After all of this we learned how to
use some more math notation, such as how to write up the Fundamental
Theorem of Calculus and other math functions such as <m>\sin(x)</m> and
<m>\ln(x)</m>. Learning all of this is really helpful to me as I
consider being a Math teacher in High School, this can help me write
lesson plans for the future.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-6">
				<title>Instructional notes</title>

				<p>See the file <c>day7.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="beamer-presentations-0910">
			<title>Beamer presentations</title>


			<subsection xml:id="preview-7">
				<title>Preview</title>

				<p>Today we will continue work on our beamer
presentations and look at a couple more advanced features.
				</p>

			</subsection>

			<subsection xml:id="review-7">
				<title>Review</title>

				<p>How did I forget to write this , ? I’ll have to
review my notes DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-7">
				<title>Student perspective</title>

				<p>Today we learned how to create new commands using
preexisting ones. We learned how to create matrices and vectors. We
learned how to type up a piecewise defined term, such as the absolute
value of <m>x</m>. We learned how some commands automatically treat the
input into those commands as <sq>math</sq> and others as <sq>stuff</sq>
that we have to define as <sq>math.</sq> This was done in continuation
of the slide show which was started on Tuesday.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-7">
				<title>Instructional notes</title>

				<p>See the file <c>day8.tex</c> in the <latex/> notes
folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="introduction-to-spreadsheets-0915">
			<title>Introduction to spreadsheets</title>


			<subsection xml:id="preview-8">
				<title>Preview</title>

				<p>After talking a bit about miscellaneous <latex/> topics,
we will move on to a brief overview of spreadsheets.
				</p>

			</subsection>

			<subsection xml:id="review-8">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-8">
				<title>Student perspective</title>

				<p>For the first part of class, Dr. Laverty let us fix
our homework if we forgot our Improvement Plan. The Improvement Plan
goes after the end of the document in a comment section. It tells what
you would like to improve on, what you wish you knew how to do, and
changes you would like to make the next time. For example, I said I
would like to improve my document’s aesthetic qualities with items like
pictures and colored fonts. For the second part of class, we began
learning about “Google Sheets". We started a new spreadsheet entitled
“Health Info" and included nine student’s information about their birth
year, and height in feet and inches. We then learned how to calculate
the ages and height in meters of said students using the formulas
<m>``current\,year - birth\,year"\,and \,``height\,in\,feet
*(12*\frac{2.54}{100}) + height\,in\,inches*(\frac{2.54}{100})</m>,
respectively. We also calculated the information’s average, median,
standard deviation, minimum, and maximum using Google Spreadsheets
provided formulas. Using the height and age as our variables, we then
made a scatter plot.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-8">
				<title>Instructional notes</title>

				<p>See the file <c>day9.gsheet</c> in the main folder
for our work in class.
				</p>

			</subsection>
		</section>
	</chapter>

<!-- end of section -->
<!-- end of section -->
<!-- end of section -->
	<chapter xml:id="mathematica">
		<title>Mathematica</title>


		<section xml:id="intro-to-buddy-and-mathematica-111">
			<title>Intro to <term>buddy</term> and Mathematica
(11/1)</title>


			<subsection xml:id="preview-20">
				<title>Preview</title>

				<p>Introduction to server accounts, Mathematica, and
possibly sage.
				</p>

			</subsection>

			<subsection xml:id="review-20">
				<title>Review</title>

				<p>After a lengthy emphasis on setting up authentication
services for server access to <url
href="https://buddy.uco.edu">buddy.uco.edu</url> and software
installation(s) we gave a brief overview of the ’calculator
functionality’ of Mathematica. Input is entered in a ’cell’ and executed
by a key combination of <sq>Shift+Enter</sq> or <sq>Shift+Return</sq>
and output to an attached cell. Output can be cleared (as you might do
before saving to reduce file size from rendered graphics or lengthy
output) from the <sq>Delete All Output</sq> choice of the <sq>Cell</sq>
menu. The full notebook can be executed (perhaps upon opening) using the
<sq>Evaluate Notebook</sq> choice of the <sq>Evaluation</sq> menu.
				</p>

				<p>We introduced the comment symbols INDEX  comment
symbols , Mathematica , (* ...) for Mathematica which is a <sq>block
comment</sq> style as opposed to the <sq>line comment</sq> style in
<latex/> (with <c>%</c>) or in R (with <c>#</c>). And the notation for
defining a function, paying special attention to the underscore on the
left-hand side. There are a few ways of entering functions distinguished
by the format of the equals sign (delayed evaluation with a <sq>colon
equals</sq> (...<c> := </c> ...) or immediate evaluation with just an
<sq>equals</sq> (...<c> = </c> ...)). In most cases there will not be a
noticeable difference between the two, but there are subtle differences.
There is a hint in the documentation to lean towards the delayed
evaluation, but I have not found this to be a major problem in my own
use. This might be slightly easier on the computer if you are defining
custom functions.
				</p>

				<p>We looked at a few other commands for dealing with
functions: <c>Expand[...]</c> INDEX  Mathematica , commands , Expand for
expanding something like a binomial and <c>Plot[function or expression
var, min, max]</c> INDEX  Mathematica , commands , Plot
				</p>

			</subsection>

			<subsection xml:id="student-perspective-20">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-20">
				<title>Instructional notes</title>

				<p>See the file <c>day1.nb</c> INDEX  notes ,
Mathematica , day1 in the <sq>Mathematica</sq> notes folder for our work
in class. Due to a delay between note-taking events, the nomenclature
has changed. This may or may not be adjusted in the future.
				</p>

			</subsection>
		</section>

		<section xml:id="more-introductory-mathematica-113">
			<title>More introductory Mathematica (11/3)</title>


			<subsection xml:id="preview-21">
				<title>Preview</title>

				<p>We will look at a bit more plotting (by trial and
error to learn about the syntax) and the many ways we can differentiate.
				</p>

			</subsection>

			<subsection xml:id="review-21">
				<title>Review</title>

				<p>Upon entering today’s function, the exciting <c>f[x_]
= 3*x+4</c>, we looked at how we can solve an equation with the
<c>Solve[equation, variable]</c> INDEX  Mathematica , commands , Solve
command. It is important to notice that <c>equation</c> was an equation
with two sides and that these sides are set equal using a <sq>double
equals</sq>. The solution is stored as a list, from which elements can
be accessed using the bracket notation.
				</p>

				<p>From there, we moved on the many other things one
might do with a function, plot, differentiate, factor its formula, and
so on. The Mathematica command names are often the relatively intuitive
capitalized or camel cased equivalents of their English word names,
<c>Plot[...]</c>, <c>D[...]</c> or <c>Differentiate[...]</c> INDEX 
Mathematica , commands , D or Differentiate, <c>Factor[...]</c> INDEX 
Mathematica , commands , Factor, and so on. Continuing our intuition, if
<c>Plot[f[x],x,0,1]</c> generates a plot of some function <m>f(x)</m>
(note the difference between brackets in Mathematica and parenthesis
common in our mathematics notation), we might expect <c>Plot[f[x],x,0,1,
y,0,1]</c> to limit the <m>y</m>-axis between <m>y=0</m> and <m>y=1</m>.
Surprisingly this does not work. Instead, to control the vertical axis
we need to specify an option of <c>PlotRange-&gt;-10,10</c>  INDEX 
Mathematica , PlotOptions , PlotRange inside the plotting command.
				</p>

				<p>Perhaps even more interesting are the ways that we
can differentiate and store the result of the differentiation operation
to a new function. The <c>D[f[x],x]</c> command returns the derivative
of <m>f(x)</m> with respect to <m>x</m> and the second argument <c>x</c>
is essential. We could also store the derivative to a new function
<c>fp</c> by using <c>fp = f’</c> INDEX  Mathematica , commands , prime
notation, but this returns a rather strange output corresponding to the
<sq>pure function</sq> (in Mathematica terminology). In particular (and
where <c>&gt;&gt;</c> indicates output), This is like no derivative that
we have ever seen , Where did the <m>x</m> (or <c>x</c>) go?
				</p>

				<p>It turns out, that in <sq>pure function</sq> notation
within Mathematica this is the properly calculated and rendered answer.
By giving <c>fp</c> an argument, in other words entering <c>fp[x]</c>,
we find The function <c>fp[x]</c> now acts like any other function. The
last way to compute a derivative is to use the <c>Derivative[...]</c>
command, in particular <c>fp = Derivative[1][f]</c>, where <c>1</c>
refers to the <c>1</c> position refers to the order of the derivative.
The <c>&amp;</c> character denotes the end of a pure function, you may
or may not go through the rest of your life without ever needing to
define a pure function.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-21">
				<title>Student perspective</title>

				<p>For Day 2 of Mathematica, we focused on setting and
solving equations, finding derivatives, and touched on plotting graphs
towards the end. We learned that setting an equation to a function such
as <term>sol = Solve[f[x] == 0]</term> allows the user to be able to be
able to use the equation easily rather than always typing out the
equation with an arbitrary number of their choosing. Using the command
<term>Clear[x]</term> allows whatever is stored or has been stored in
<m>x</m> or whatever variable you have set to be wiped away.
				</p>

				<p>We also learned that the replacement operator is
<term>/.</term> , which replaces whatever variable you set to be the
value in the solution. Last, we focused on the plot function:
<term>Plot[...]</term>. We were able to set the range of the plot from
the x-axis and y-axis, change the image size, and the colors of the plot
line.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-21">
				<title>Instructional notes</title>

				<p>See the file <c>day2.nb</c> INDEX  notes ,
Mathematica , day2 in the <sq>Mathematica</sq> notes folder for our work
in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="extracting-information-from-calculations-118">
			<title>Extracting information from calculations
(11/8)</title>


			<subsection xml:id="preview-22">
				<title>Preview</title>

				<p>We will examine the rather peculiar Mathematica
<sq>pattern</sq> and understand how it can be used in practice.
				</p>

			</subsection>

			<subsection xml:id="review-22">
				<title>Review</title>

				<p>In many situations we might imagine solving an
equation or system of equations, with the hope of using the value or
values for subsequent calculations. For example, one might want to
compute critical points of a function and use those points to evaluate
the values of the function or its second derivative. Once we get these
values, we have to consider how we might use them in subsequent work. We
do not (or at least should not) necessarily want to copy and paste these
into subsequent calculations, because should our original problem change
for some reason (a typo, new information, a new but related situation)
we would have to copy and paste again. Instead we want to attempt to
automate the extraction and use of this newly found information.
				</p>

				<p>It turns out that rather small changes to the code
can have a tremendous impact on its usability. Consider the code below
where <c>&gt;&gt;</c> identifies output of the preceding line. The
replacement symbol <c>/.</c> INDEX  Mathematica , commands , replacement
operator attempts to replace the variable to its left (above called
<c>X</c>) with the corresponding value in the solution (above <c>x -&gt;
7/3</c> or <m>x = 7/3</m>). Since <c>X</c> and <c>x</c> are different
(i.e., case sensitivity matters), this replacement fails. Instead we
must solve the equation using the concept of a <sq>pattern</sq> which
roughly says <q>Solve three times <sq>something</sq> minus seven equals
zero for the unknown.</q>
				</p>

				<p>Instead, if we merely replace <c>x</c> by <c>x_</c>
in the solution, things proceed smoothly since <c>x_</c> refers less
explicitly to <m>x</m>, but instead to something that can be best
described as <sq><m>x</m>-like</sq>. There are a variety of applications
of this sort of replacement technique, graphical or computational. We
used <c>ListPlot[x0, y0, x1,y1, ..., ...]</c> INDEX  Mathematica ,
commands , ListPlot to plot ordered pairs, specifically to point out
where the roots to a polynomial occurred. We took some time to extend
this to higher order polynomials with additional roots, embedding this
within a <c>Do[]</c> INDEX  Mathematica , commands , Do loop to reduce
the repetition.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-22">
				<title>Student perspective</title>

				<p>Still waiting.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-22">
				<title>Instructional notes</title>

				<p>See the file <c>day3.nb</c> INDEX  notes ,
Mathematica , day3 in the <sq>Mathematica</sq> notes folder for our work
in class.
				</p>

			</subsection>
		</section>

		<section xml:id="customizing-graphs-1110">
			<title>Customizing graphs</title>


			<subsection xml:id="preview-23">
				<title>Preview</title>

				<p>We will explore <c>Plot[]</c> options for customizing
graphs.
				</p>

			</subsection>

			<subsection xml:id="review-23">
				<title>Review</title>

				<p>We experimented with some elementary plot options,
adding axes labels with <c>AxesLabel-&gt;"horiz", "vert"</c> INDEX 
Mathematica , PlotOptions , AxesLabel, where <q>horiz</q> and
<q>vert</q> are appropriately named for your situation. Notice that the
default graphics do not provide axes labels, so this is a worthy
concern. Moreover we can add a legend to the plot using
<c>PlotLegends</c> INDEX  Mathematica , PlotOptions , PlotLegends with
the appropriate option (either <c>None</c>, <c>"Expressions"</c>, or
<c>Automatic</c>), though (and perhaps this should not be as surprising
as it might seem) adding a legend requires multiple curves or objects in
a plot. The <c>"Expressions"</c> option gives a nicely formatted legend
that is color matched to the graph and identifies the plotted functions
by name. From there we took some time to explore a variety of options
including the color of the plotted line (by name or by other color
models), the size, style, or font of the tick labels and other text. If
desired, one can add <c>PlotLabel -&gt; "f[x]" == f[x]</c> INDEX 
Mathematica , PlotOptions , PlotLabel in the plot command to place the
function name and formula in the title of the plot.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-23">
				<title>Student perspective</title>

				<p>For Day 4 of Mathematica, we focused a little more on
graphing. We learned that when you would like a legend added to your
plot, you must have multiple items (2 or more) for the legend function
to work successfully: <term>[PlotLegends - ”Expressions”]</term> .If you
were to have only one item on the plot , the legend will not appear.
				</p>

				<p>We also learned how to change the font and Axes
Labels on a plot as well as shading below the curve of the line with the
functions called <term>PlotStyle</term> and <term>BaseStyle</term> when
in the <term>Plot[...]</term> command. Last, we learned how to show the
roots of a line and placing points to signify where they are located on
the plot with the <term>roots</term> command.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-23">
				<title>Instructional notes</title>

				<p>See the file <c>day4.nb</c> INDEX  notes ,
Mathematica , day4 in the <sq>Mathematica</sq> notes folder for our work
in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="occasional-limitations-and-exploration-1115">
			<title>Occasional limitations and exploration
</title>


			<subsection xml:id="preview-24">
				<title>Preview</title>

				<p>Exposing some frustrations with Mathematica
design/constraints and using the <sq>Help</sq> and <sq>See Also</sq>
information when all else fails.
				</p>

			</subsection>

			<subsection xml:id="review-24">
				<title>Review</title>

				<p>It might seem useful to build graphs by accumulating
repetitive content within a loop, for example if we wanted to
systematically make small changes to the content like varying a slope,
intercept, or power in a polynomial. However, printing legends requires
multiple pieces of information and adding information <sq>one at a
time</sq> is at odds with the construction of the legend. There are
certainly workarounds to this, but the code quickly becomes quite
lengthy. All of this extra code means it might have been faster to just
type out the contents of the graph from the start , Those willing to put
in some extra work, might experiment with the <c>Tooltip[]</c> command
and its ability to place text (i.e., labels of curves) at certain points
on a graph.
				</p>

				<p>We also looked again at roots to a polynomial,
derivatives of a polynomial, and indefinite and definite integrals of a
polynomial. After mentioning <c>NIntegrate[]</c> INDEX  Mathematica ,
commands , NIntegrate as an alternative to <c>Integrate[]</c> INDEX 
Mathematica , commands , Integrate when a definite integral was desired,
as opposed to a symbolic indefinite integral, we looked at the
corresponding <c>NSolve[]</c> INDEX  Mathematica , commands , NSolve .
It turns out that depending on the type of equation we are trying to
solve there might be better <sq>built-ins</sq> to do so (compare
<c>Solve[]</c>, <c>NSolve[]</c>, <c>FindRoot[]</c> INDEX  Mathematica ,
commands , FindRoot , or <c>Reduce[]</c> INDEX  Mathematica , commands ,
Reduce , or others in the corresponding <sq>See Also</sq> section of the
help files). When we solved equations, we also noticed that we
occasionally get strange numbers that <sq>should be</sq> zero, but due
to the representations of numbers on computers cannot be represented as
such. See the short perspectives on the <url
href="http://www.math.umn.edu/~arnold/disasters/patriot.html">Patriot
Missile (link)</url> or the <url
href="http://www.math.umn.edu/~arnold/disasters/ariane.html">Ariane
rocket (link)</url> for a sense of why this issue is of extreme
importance.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-24">
				<title>Student perspective</title>

				<p>Still waiting.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-24">
				<title>Instructional notes</title>

				<p>See the file <c>day5.nb</c> INDEX  notes ,
Mathematica , day5 in the <sq>Mathematica</sq> notes folder for our work
in class.
				</p>

			</subsection>
		</section>

		<section xml:id="more-programming-1117">
			<title>More programming</title>


			<subsection xml:id="preview-25">
				<title>Preview</title>

				<p>We will introduce the <c>Module[..]</c> and a few
other convenient features.
				</p>

			</subsection>

			<subsection xml:id="review-25">
				<title>Review</title>

				<p>To compute the sum <me>\sum_{k=1}^n
\dfrac{1}{\sqrt{k}}</me> we defined a <c>Module[...]</c> INDEX 
Mathematica , commands , Module to package our code and hide some of the
locally-scoped variables from the rest of our <sq>workspace</sq>. The
format of a module is, where the arguments or parameters of the function
<c>funName[...]</c> supply the Module with necessary information needed
to run. We constructed our function with both a <c>Do[...]</c> INDEX 
Mathematica , commands , Do loop and a <c>For[...]</c> INDEX 
Mathematica , commands , For loop. The <c>Do[...]</c> loop is of the
form In a <c>Do[...]</c> loop, the instructions could be simple or
multiline. If the instructions are complex, individual lines or commands
are separated by semicolons.
				</p>

				<p>The <c>For[...]</c> loop is of the form In a
<c>For[...]</c> loop, the instructions could be simple or multiline. If
the instructions are complex, individual lines or commands are separated
by semicolons.
				</p>

				<p>The functions, <c>mySum[n]</c> and <c>mySum2[n]</c>
each took an argument <c>n</c> that gave the upper limit of the sum
above. This was a good point to jump off to a few special functions:
<c>Map[...]</c> INDEX  Mathematica , commands , Map,
<c>NestList[...]</c> INDEX  Mathematica , commands , NestList, and
<c>Nest[...]</c> INDEX  Mathematica , commands , Nest. Each of these
parallels in some sense the action of do or for loops. The command
<c>Map[...]</c> applies a function or formula to elements of a list. For
example, since <c>Range[10]</c> INDEX  Mathematica , commands , Range
produces a list of the numbers one through ten, computes the values of
the sums whose upper limits are each the numbers one through ten, and
returns the values in a list. We can plot these with
<c>ListPlot[...]</c> INDEX  Mathematica , commands , ListPlot which is
designed for <sq>dot plots</sq>.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-25">
				<title>Student perspective</title>

				<p>Still waiting.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-25">
				<title>Instructional notes</title>

				<p>See the file <c>day6.nb</c> INDEX  notes ,
Mathematica , day6 in the <sq>Mathematica</sq> notes folder for our work
in class.
				</p>

			</subsection>
		</section>
</chapter>
<!--
	<section xml:id="sage">
		<title>sage</title>


		<section xml:id="sage-1020">
			<title>sage</title>


			<subsection xml:id="preview-17">
				<title>Preview</title>

			</subsection>

			<subsection xml:id="review-17">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-17">
				<title>Student perspective</title>

				<p>This was our first day with Sage. We learned that you
can do basic math and that Sage was on the internet and easy to get to.
We learned how to make a plot. We learned how to solve limits and take
derivatives. We also learned how to integrate. We also solved functions.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-17">
				<title>Instructional notes</title>

				<p>See the file <c>day18.pdf</c> (formerly day 1) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="sage-1022">
			<title>sage</title>


			<subsection xml:id="preview-18">
				<title>Preview</title>

			</subsection>

			<subsection xml:id="review-18">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-18">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-18">
				<title>Instructional notes</title>

				<p>See the file <c>day19.pdf</c> (formerly day 2) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="debates-1027">
			<title>Debates</title>


			<subsection xml:id="preview-19">
				<title>Preview</title>

				<p>Debates DAGGER
				</p>

			</subsection>

			<subsection xml:id="review-19">
				<title>Review</title>

				<p>The debates were contenders for the highlight of my
semester, and yours too I hope DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-19">
				<title>Student perspective</title>

				<p>Debates DAGGER
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-19">
				<title>Instructional notes</title>

				<p>Debates DAGGER
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1029">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-20">
				<title>Preview</title>

				<p>We will learn about printing tables in sage.
				</p>

			</subsection>

			<subsection xml:id="review-20">
				<title>Review</title>

				<p>Debates DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-20">
				<title>Student perspective</title>

				<p>Today, we were taught to define a <sq>sine</sq>
function and produce a <latex/> table. This program has to use special
coding like <c>[(% + f), (% + f)’, (%(x/10, f(x/10)))]</c>, where
<c>(%+f)</c> is place holder for type information and <sq>f</sq> is
floating point. After that, we copy the code to the <latex/> and modify
some coding on <latex/> and generate a <latex/> table. Next, we are taught to
generate a sec table and plot a graph using sage. In addition to the
function, we let p be the plotting code and use return(p) to generate
the graph.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-20">
				<title>Instructional notes</title>

				<p>See the file <c>day21.pdf</c> (formerly day 3) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="section">
			<title></title>


			<subsection xml:id="preview-21">
				<title>Preview</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="review-21">
				<title>Review</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-21">
				<title>Student perspective</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-21">
				<title>Instructional notes</title>

				<p>See the file <c>day22.pdf</c> (formerly day 4) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1105">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-22">
				<title>Preview</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="review-22">
				<title>Review</title>

				<p>We made neat graphs with rainbow colored lines. See
the page <url
href="http://trac.sagemath.org/ticket/5601">http://trac.sagemath.org/
ticket/5601</url> for an interesting and surprisingly passionate
discussion on the naming of colors plotted in Figure <xref
ref="fig::sage_colors" />.
				</p>

				<figure>
	<image source="./sage/sage_colors.png"/>
<caption>Color names available to sage. The website linked in the text
show some interesting ways that you can automate color
selection.</caption>
</figure>

			</subsection>

			<subsection xml:id="student-perspective-22">
				<title>Student perspective</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-22">
				<title>Instructional notes</title>

				<p>See the file <c>day23.pdf</c> (formerly day 5) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="miscellaneous-programming-1110">
			<title>Miscellaneous programming</title>


			<subsection xml:id="preview-23">
				<title>Preview</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="review-23">
				<title>Review</title>

				<p>We looked at programming in sage with if-else
statements, and defining a program to define a piecewise calculation.
Since we were not able to graph the object of our program, we computed
and plotted points. It turned out there was a function called
<c>Piecewise(...)</c> that took a rather complicated argument. With a
bit of debugging, we were able to plot and differentiate the function.
				</p>

				<p>We also <em>briefly</em> explored programming special
functions like <c>nChooseR()</c> to compute the combinations of objects
and compared this to binomial coefficients.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-23">
				<title>Student perspective</title>

				<p>We first learned how to use if-else commands. And we
tried using a series of if-else at the same time. Then we learnt
piecewise functions and learnt to print a series of numbers using
<m>f(i)</m> and <c>srange</c>. We had trouble differentiating a function
because we used <c>diff(f,x)</c> instead of only <c>diff(f)</c>. This
was because we previously defined function f, therefore we can
differentiate by only using diff(f). Next we learnt how to compute
permutations on sage. We first defined <c>nChooseR</c> and then print
the answers according to the definition. We also learnt using [0..2]
which means number 0 to 2, instead of typing all numbers out. Finally we
computed the Pascal’s triangle by using the <c>nChooseR</c> function and
where <m>n = 10</m> and <sq>R = 0 to 10</sq> or <c>[0..10]</c>.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-23">
				<title>Instructional notes</title>

				<p>See the file <c>day24.pdf</c> (formerly day 6) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="miscellaneous-programming-1112">
			<title>Miscellaneous programming</title>


			<subsection xml:id="preview-24">
				<title>Preview</title>

				<p>We will look at more carefully formatting numeric
output and printing to the screen with substitution of values.
				</p>

			</subsection>

			<subsection xml:id="review-24">
				<title>Review</title>

				<p>Programming DAGGER
				</p>

			</subsection>

			<subsection xml:id="student-perspective-24">
				<title>Student perspective</title>

				<p>We continued to learn different features in sage for
advanced graphing. Before talking about the new materials, we discussed
over the upcoming individual final project. The chosen topics must be
approved by Dr. Laverty. Then we continued working on piecewise
functions. We can use the code <sq>help (name)</sq> to bring us an
overview about new command of related terms, in this case it is
piecewise. Next, we went over permutation and combination, which is an
essential principle in statistic application. Last but not least, we
learned a new method to display decimal numbers formatted.Overall, it
was an interesting week because we learned new things, and also
something that was easily relatable - Permutations and Combinations.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-24">
				<title>Instructional notes</title>

				<p>See the file <c>day25.pdf</c> (formerly day 7) in the
sage notes folder for our work in class.
				</p>

			</subsection>
		</section>
	</section>
-->
<!-- end of section -->
<!-- end of section -->
<!-- end of section -->
<!--
	<section xml:id="miscellaneous-adventures">
		<title>Miscellaneous adventures</title>


		<section xml:id="programming-in-r-difference-equations-1117">
			<title>Programming in R: difference equations
</title>


			<subsection xml:id="preview-25">
				<title>Preview</title>

				<p>In the past we have studied two famous difference
equations, or recurrence relations:
				</p>

				<p><ol>
<li>
				<p>Newton’s method of rootfinding by successive tangent
line approximation,<me>x_{n+1} = x_n - \dfrac{f(x_n)}{f'(x_{n})}</me>
				</p>
</li>

<li>
				<p>Generating terms of the Fibonacci sequence for
<m>n\geq2</m> given <m>x_0=x_1=1</m>,<me>x_n = x_{n-1} + x_{n-2}</me>
				</p>
</li>

				</ol></p>

				<p>Today we will look at computing and graphing
solutions to more general difference equations of the form <me>x_{n+1} =
f(x_n)</me> for certain important functions <m>f(x)</m>.
				</p>

			</subsection>

			<subsection xml:id="review-25">
				<title>Review</title>

				<p>We had a very productive day programming the
recurrence relation computationally and graphically. We experimented
with the program to generate some exciting (mathematically
<sq>chaotic</sq>) results.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-25">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-25">
				<title>Instructional notes</title>

				<p>See the file <c>day26.pdf</c> in the R notes folder
for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-in-r-difference-equations-1119">
			<title>Programming in R: difference equations
</title>


			<subsection xml:id="preview-26">
				<title>Preview</title>

				<p>Today we will look at computing and graphing
solutions to more general difference equations of the form <me>x_{n+1} =
f(x_n)</me> for certain important functions <m>f(x)</m>. And,
summarizing the results with bifurcation diagrams.
				</p>

			</subsection>

			<subsection xml:id="review-26">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-26">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-26">
				<title>Instructional notes</title>

				<p>See the file <c>day27.pdf</c> in the R notes folder
for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="work-day-1124">
			<title>Work day</title>


			<subsection xml:id="preview-27">
				<title>Preview</title>

				<p>Miscellaneous programming.
				</p>

			</subsection>

			<subsection xml:id="review-27">
				<title>Review</title>

				<p>Miscellaneous programming of arbitrary tasks. Notes
kept in R.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-27">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-27">
				<title>Instructional notes</title>

				<p>See the file <c>day28.pdf</c> in the R notes folder
for our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="no-class-1126">
			<title>No class</title>


			<subsection xml:id="preview-28">
				<title>Preview</title>

				<p>No class.
				</p>

			</subsection>

			<subsection xml:id="review-28">
				<title>Review</title>

				<p>No class.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-28">
				<title>Student perspective</title>

				<p>No class.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-28">
				<title>Instructional notes</title>

				<p>No class.
				</p>

			</subsection>
		</section>

		<section xml:id="hack-a-thon-1201">
			<title>Hack-a-thon</title>


			<subsection xml:id="preview-29">
				<title>Preview</title>

				<p>You dream it, you do it.
				</p>

			</subsection>

			<subsection xml:id="review-29">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-29">
				<title>Student perspective</title>

				<p>Today was unlike any other day of the semester. Dr.
Laverty referred to it as Hackathon , This is where a group of students
get together, come up with a cool mathematical idea, and write a program
that executes that idea. This was a great chance for us to write
programs that we have always wanted to, using R or Sage. All the groups
came up with really cool ideas. For instance, the members of my group
and I decided to write a program using sage, that finds the area of a
cardioid. Today we had a chance to use all the material that we have
learned so far, to write interesting programs. Hackathon was a nice way
to end the semester.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-29">
				<title>Instructional notes</title>

				<p>These probably don’t exist.
				</p>

			</subsection>
		</section>

		<section xml:id="hack-a-thon-1203">
			<title>Hack-a-thon</title>


			<subsection xml:id="preview-30">
				<title>Preview</title>

				<p>You dream it, you do it.
				</p>

			</subsection>

			<subsection xml:id="review-30">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-30">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-30">
				<title>Instructional notes</title>

				<p>These probably don’t exist.
				</p>
			</subsection>

		</section>

	</section>
-->
<!-- end of section -->
<!-- end of section -->
<!-- end of section -->

	<chapter xml:id="r">
		<title>R</title>


		<section xml:id="introduction-to-r-0917">
			<title>Introduction to R</title>


			<subsection xml:id="preview-9">
				<title>Preview</title>

				<p>We will look at some assorted, basic commands in
<c>R</c> INDEX Software engine , R. To install R at home you might look
at the basic R GUI INDEX Software interface , R GUI (graphical user
interface) from the CRAN website, Tinn-R INDEX Software interface ,
Tinn-R, RStudio INDEX Software interface , RStudio, or Rcommander INDEX
Software interface , RCommander. They will all do the same thing and run
the same underlying R engine, but have varying levels of customization
or flair.
				</p>

			</subsection>

			<subsection xml:id="review-9">
				<title>Review</title>

				<p>We spent quite a bit of time learning where files
were located so that we could read data into <c>R</c> using
<c>read.table(...)</c> INDEX R , built-in , read.table. The command uses
various options including the <sq>separation character</sq>, referring
to the comma or tab that is used to represent a break between
spreadsheet cells. To store the values of our data we used the
<sq>assignment operator</sq>, coded as <c>&lt;-</c> with <em>no
spaces</em> between the <c>&lt;</c> and the <c>-</c>. We were able to
experiment with quite a few options of the basic plot INDEX R , graphics
, plot, from plot types: lines, both, or points; to other symbols or
colors. In particular we looked at one of the all time great graphs:
				</p>

				<pre> plot(1:25, pch = 1:25, col = 1:25)</pre>

				<p>What is so special about this graph is that it
illustrates the most common default symbols and colors. Notice that in
this manner, the symbol choices greatly outnumber the colors. There are
a variety of other commands to produce special colors or color schemes.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-9">
				<title>Student perspective</title>

				<p>During the beginning of class we created a
spreadsheet for our debate projects. We wrote down the topics of debate
and who would be arguing them. After everyone had written down their
topic, we created a separate spreadsheet with information to be used
later in the new program we are learning, <q>R.</q> In R we learned how
to code and calculate functions such as logarithms and integrals. We
were also able to command the program to generate a graph of the second
spreadsheet we made, and we learned how to change the plotted symbols
and colors of the graph.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-9">
				<title>Instructional notes</title>

				<p>See the file <c>day10.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="graphics-and-programming-0922">
			<title>Graphics and programming</title>


			<subsection xml:id="preview-10">
				<title>Preview</title>

				<p>We will focus on a few new mathematically-oriented
commands and additional graphics capabilities.
				</p>

			</subsection>

			<subsection xml:id="review-10">
				<title>Review</title>

				<p>To extend our graphing capabilities, we looked at a
few ways to define data or functions. We could us the colon operator
<c>1:10</c> to define a sequence of numbers <c>1 2 3 4 5 6 7 8 9 10</c>.
Alternatively, we could use the sequence-generating command
				</p>

				<pre>seq(from, to, (by = or length = ))</pre>

				<p> INDEX R , built-in , seq the <c>by = </c> option
fixes the step size between successive numbers, while the <c>length =
</c> option fixes the length of the output and evenly spaces the points
between the endpoints <c>from</c> and <c>to</c>. Such a command might be
useful for exploring the behavior of a mathematical sequence to make a
conjecture about its behavior or convergence.
				</p>

				<p>We learned how to define a mathematical function for
plotting or computational purposes This setup also works for more
complex programming functions that take more than one argument.. A
mathematical function might be written <c>f &lt;- function(x) x**2</c>,
which could be plotted with <c>plot(f)</c> or evaluated with
<c>f(2.05)</c>. The default plotting window for a function is <c>xlim =
c(0, 1)</c> which can be changed.
				</p>

				<p>Given that we spent some time on sequences and
functions, we can use the command <c>sapply(object, function)</c> INDEX
R , built-in , sapply to apply a given function to an object. In this
case our object was a series of <m>x</m> values, and our function was a
mathematical function of <m>x</m>. This result gives the function values
evaluated the points in the list of <m>x</m> values. Such a command
might be useful to plot values of a function at a set of points. In
fact, we plotted these function values and added a legend INDEX R ,
graphics , legend to the graph. Legends can become quite complex, so we
kept our first rather simple.
				</p>

				<p>Since we had a few minutes, we briefly looked at
<c>for</c> INDEX R , programming , for loops.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-10">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-10">
				<title>Instructional notes</title>

				<p>See the file <c>day11.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="programming-in-with-loops-and-conditionals-0924">
			<title>Programming in with loops and conditionals
</title>


			<subsection xml:id="preview-11">
				<title>Preview</title>

				<p>In this class we will continue learning about
programming in <c>R</c>.
				</p>

			</subsection>

			<subsection xml:id="review-11">
				<title>Review</title>

				<p>As planned, we continued our work on <c>for</c> INDEX
R , programming , for loops and printing contents to the screen.
Remember, screen-printing is computationally expensive (slow) so most
programs will disable printing by default. If you want to see something,
ask for it using <c>print(it)</c> INDEX R , built-in , print. More
complicated or better formatted text might require pasting a mix of text
and values with the formatting command <c>paste("expression", value,
"expression", ..., sep=’ ’)</c> <idx> R , built-in , paste</idx>.
				</p>

				<p>As we stepped through for loops, we occasionally
wanted to see what was happening. So, we used a variety of <c>if</c> 
<idx> R , programming DAGGER</idx> if statements to test whether our
progress matched a given condition (a particular step of our iteration).
One useful arithmetic operation was <c>%%</c> <idx> R , built-in </idx>
modular division which is actually the calculation for modular division.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-11">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-11">
				<title>Instructional notes</title>

				<p>See the file <c>day12.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section
xml:id="programming-in-with-loops-and-conditionals-0929">
			<title>Programming in with loops and conditionals
</title>


			<subsection xml:id="preview-12">
				<title>Preview</title>

				<p>In this class we will continue learning about
programming in <c>R</c>. In particular we will resume work on Newton’s
Method of root-finding.
				</p>

			</subsection>

			<subsection xml:id="review-12">
				<title>Review</title>

				<p>As planned, we continued our work on Newton’s Method.
We reviewed the algorithm and added tangent lines (using the point-slope
form of the line) to illustrate the method. A similar illustration could
have been made using the <c>segments(...)</c> command.
				</p>

				<p>We used only old commands, but practiced how to
design and run a computer algorithm. In particular, it was important to
note what order the commands were executed. If we did not <sq>reset</sq>
our initial guess, we often got very confusing pictures where our
tangent lines overlapped. If we forgot to recompute the derivative after
changing the function (or computed the derivative incorrectly) we were
not able to correctly solve for the <m>x</m>-intercept of interest.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-12">
				<title>Student perspective</title>

				<p>Today in class we revisited graphing. We approximated
<m>f(x)</m> with the tangent of <m>f(x)</m>. We used Newton’s Method to
show this, making guesses for <m>x</m>, first starting with 1. Using
smaller <q>xlim</q> (limits for the x-axis) gives us a closer look at
how close these tangent lines are to the actual slope. After we run our
original plot with our guess at <m>x=1</m>, we can run the <q>ftan</q>
(tangent line) and include <q>add=T</q> (add true) to add the tangent
line to the previous graph.
				</p>

				<p>Then, we tried some functions ourselves, making up
new functions and plotting them with tangent lines of different colors
at our guesses. A common error we had in class was forgetting the
asterisk every time we wanted to multiply something. For example, when
typing <m>3x</m>, it needed to be <q><m>3*x</m></q>. After we played
around with these a bit, as a class, we used a <c>for</c> loop to print
tangent lines of all guesses from 1 to 10 (because our for loop went
from 1 to 10), and showed 10 different tangent lines in 10 different
colors. Using <q>col=j</q> shows 10 different colors because our j went
from 1 to 10. Then we played around with our own functions from earlier
in class, adding the for loop with multiple tangent lines, and could use
smaller <m>x</m>-limits to see which of our guesses were the closest.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-12">
				<title>Instructional notes</title>

				<p>See the file <c>day13.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1001">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-13">
				<title>Preview</title>

				<p>Depending on the class interest we will either
program fractals or Riemann sums.
				</p>

			</subsection>

			<subsection xml:id="review-13">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-13">
				<title>Student perspective</title>

				<p>We began the day talking about the different types of
R and <latex/> that can be installed. Each one is slightly different in the
way that it is used, but they all do the same thing in the end. No
matter which one is used all will have the same outcome.
				</p>

				<p>We then created a graph to help demonstrate the
concepts we’d be learning this day. The graph is comprised of 2
different functions, <m>f(x)</m> and <m>g(x)</m>, to create a graph that
would be good for use on quizzes where you are testing the students’
knowledge on limits. We also learned how to make a NULL (blank) graph
that will conveniently clear any functions that have been plotted, and
will set up new axes.
				</p>

				<p>We then started to look at the different types of
bullet points and colors we can use, including how to change the
background color of the hollow points. We also experimented with how to
change these points on a graph with multiple functions being plotted. We
learned how to label and change the size of axes, as well as how to make
a legend that includes the different line styles, bullets, and colors
that we have used. We also were shown how to label the axis, as well as
write text inside the graph at specific co-ordinates.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-13">
				<title>Instructional notes</title>

				<p>See the file <c>day14.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1006">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-14">
				<title>Preview</title>

				<p>Depending on the class interest we will either
program fractals or Riemann sums.
				</p>

			</subsection>

			<subsection xml:id="review-14">
				<title>Review</title>

			</subsection>

			<subsection xml:id="student-perspective-14">
				<title>Student perspective</title>

				<p>Today in class we learned how to use R to program
Riemann Sums. We first picked a function to work with and assign to
<m>f</m>, and we assigned values to <m>a, b, n, dx</m>, and also the
<m>area</m>. We made <m>dx</m> equal to <m>(b-a)/n</m>. We then computed
the area using the left hand method and the equation <c>area &lt;- area
+ dx*(f(a))</c> then <c>area &lt;- area + dx*f(a+1*dx)</c> and so on for
each of the 5 rectangles we computed. After we did that we learned how
draw rectangles onto our graph using the polygon command. I found this
part of the programming to be a bit difficult because it was kind of
confusing knowing what data to put into to the command to give you the
rectangle shape you want. After messing with that command for a bit we
came back to finding the area of the rectangles, but this time using a
for loop, and a bigger value of <m>N</m>. We also used the for loop to
draw our rectangles for all values in 1:N using the polygon command. We
ended up with 10 rectangles on our graph. We then finally learned how to
make it into a function. We made <c>rectangles</c> into a function of
<m>x</m> incorporating the for loop we had just made.This allows us to
just be able to type <m>rectangles(a, b, N)</m> with numbers assigned to
<m>a, b,</m> and <m>N</m> and it give us the same information we had
been computing but with less work.
				</p>

			</subsection>

			<subsection xml:id="instructional-notes-14">
				<title>Instructional notes</title>

				<p>See the file <c>day15.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1008">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-15">
				<title>Preview</title>

				<p>Depending on the class interest we will either
program fractals or Riemann sums.
				</p>

			</subsection>

			<subsection xml:id="review-15">
				<title>Review</title>

				<p>This was primarily a work day. We put fractals on
hold.
				</p>

			</subsection>

			<subsection xml:id="student-perspective-15">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-15">
				<title>Instructional notes</title>

				<p>See the file <c>day16.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>

		<section xml:id="programming-and-advanced-graphics-1013">
			<title>Programming and advanced graphics</title>


			<subsection xml:id="preview-16">
				<title>Preview</title>

				<p>We will look at a few miscellaneous graphing topics
and briefly look at matrices. After that, sometime will be given to
group and project work.
				</p>

			</subsection>

			<subsection xml:id="review-16">
				<title>Review</title>

				<p>We looked at plotting data from two vectors. In fact,
we generated the vectors with the new command <c>runif(number, low,
high)</c> which generates <c>number</c> random numbers between the
values of <c>low</c> and <c>high</c>. We plotted these data and reviewed
the basic plotting customization options. We added a new twist by
computing the trend line with the <c>lm(...)</c> function, then plotting
it with the <c>abline(lm(...))</c> command. We added a custom legend to
label our graph. The following code suggests how we might automatically
generate the equation from the trendline.
				</p>

				<pre>x &lt;- 1:10 + runif(10, 0, 1)
y &lt;- 11:20 + runif(10, -2, 2)
plot(y ~ x, xlim=c(0, 15), ylim=c(10, 25), las=1, pch=19, col=2)

fit &lt;- lm(y ~ x)
abline(fit)
ab &lt;- fit$coef
legend("topleft", c("data",     
 as.expression(bquote(y == .(signif(ab[1], 2)) + .(signif(ab[2],
2))*x))), 
 col=c(2, 1), lty = c(NA, 1), pch=c(19, NA))</pre>

				<p>The legend and the two indented lines are part of the
same command. The expression to print the calculated slope and intercept
is complex, but this is no small task. The goal is never to rediscover
this on your own, but to adapt this to future needs. The legend an the
two indented lines are part of the same command.
				</p>

				<p>Given such a nice graph, it might be nice to save it.
Though there are a few methods, my preferred method is the following:
				</p>

				<pre>pdf("name.pdf", height = 10, width = 10, bg =
"white") # opens file
    # graph code
    # graph code
dev.off() # closes file</pre>

			</subsection>

			<subsection xml:id="student-perspective-16">
				<title>Student perspective</title>

			</subsection>

			<subsection xml:id="instructional-notes-16">
				<title>Instructional notes</title>

				<p>See the file <c>day17.R</c> in the R notes folder for
our work in class.
				</p>

			</subsection>
		</section>
	</chapter>

<!-- end of section -->

</book>
</pretext>
